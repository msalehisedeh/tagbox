{"version":3,"sources":["ng://@sedeh/tagbox/src/app/tagbox/interfaces/tagbox.interfaces.ts","ng://@sedeh/tagbox/src/app/tagbox/components/tagbox.component.ts","ng://@sedeh/tagbox/src/app/tagbox/components/tag.transfer.ts","ng://@sedeh/tagbox/src/app/tagbox/components/tag.component.ts","ng://@sedeh/tagbox/src/app/tagbox/tagbox.module.ts"],"names":["disabled","appendOnDrop","prependOnDrop","swapOnDrop","viewOnly","addOnly","removeOnly","addAndRemove","addRemoveModify","multiSelect","singleSelect","TagBoxComponent","renderer","el","this","EventEmitter","event","prototype","ngOnInit","_this","selectedindex","String","tags","x","split","map","t","_selectedindex","push","parseInt","Array","_tags","delineateby","setElementAttribute","nativeElement","ngOnChanges","changes","itemSelectedAt","index","canSelect","selectionpolicy","Selectionpolicy","indexOf","itemSelectionClass","isRemovable","canRemove","editpolicy","EditPolicy","mintags","length","onerror","emit","isDuplicate","name","flag","allowedToaddItem","canAdd","maxtags","maxtaglength","join","maxboxlength","notifyChange","onchange","id","selecedIndex","formController","notifySelection","onselect","createDropRequest","action","source","destination","request","parent","prependTagAt","result","newName","beforeAction","appendTagAt","removeTagWithName","item","i","splice","addTagWithName","onTagRemove","onTagAdd","click","reset","onTagChange","originalName","to","init","onTagDrop","sind","dind","dragpolicy","DragDropPolicy","onTagSelect","onTagFocus","list","childNodes","nodeType","setElementClass","Component","args","selector","template","Renderer","ElementRef","Output","Input","TagTransfer","setData","value","data","getData","Injectable","TagComponent","dataTransfer","into","draggable","dragStart","stopPropagation","allowDrag","drag","dragEnd","drop","preventDefault","ondrop","dragEnter","allowDrop","dragLeave","dragOver","format","keyup","target","editor","code","which","editMode","setTimeout","onadd","filler","selectedFiller","fillerList","isSelectable","holder","focus","remove","isEditable","updateFillerList","onfocus","isDraggable","select","tabout","edit","autocomplete","filter","onremove","formattedName","transform","InToPipe","ViewChild","HostListener","TagBoxModule","NgModule","imports","CommonModule","IntoPipeModule","DragDropModule","declarations","exports","entryComponents","providers","schemas","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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","sourcesContent":["\r\nexport enum DragDropPolicy {\r\n  disabled = 1,\r\n  appendOnDrop = 2,\r\n  prependOnDrop = 3,\r\n  swapOnDrop = 4\r\n}\r\nexport enum EditPolicy {\r\n  viewOnly = 1,\r\n  addOnly = 2,\r\n  removeOnly = 4,\r\n  addAndRemove = 6,\r\n  addRemoveModify = 7\r\n}\r\nexport enum Selectionpolicy {\r\n  disabled = 1,\r\n  multiSelect = 2,\r\n  singleSelect = 3\r\n}\r\n","/*\r\n * Comparision Tool will layout two comparision trees side by side and feed them an internal object\r\n * heirarchy created for internal use from JSON objects given to this component.\r\n */\r\nimport {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  OnInit,\r\n  OnChanges,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  Renderer\r\n} from '@angular/core';\r\n\r\nimport {\r\n  DragDropPolicy,\r\n  Selectionpolicy,\r\n  EditPolicy\r\n} from '../interfaces/tagbox.interfaces';\r\n\r\nimport { TagComponent } from './tag.component';\r\n\r\n@Component({\r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'tagbox',\r\n  templateUrl: './tagbox.component.html',\r\n  styleUrls: ['./tagbox.component.scss'],\r\n})\r\nexport class TagBoxComponent implements OnInit, OnChanges {\r\n\r\n  _tags: string[] = [];\r\n  _selectedindex: number[] = [];\r\n  \r\n  @Output(\"onchange\")\r\n  onchange= new EventEmitter()\r\n\r\n  @Output(\"onerror\")\r\n  onerror= new EventEmitter()\r\n\r\n  @Output(\"onselect\")\r\n  onselect= new EventEmitter()\r\n\r\n  @Input(\"beforeAction\")\r\n  beforeAction = (event) => true;\r\n\r\n  @Input(\"id\")\r\n  id: string;\r\n\r\n  @Input(\"placeholder\")\r\n  placeholder: string = \"Add Tag\";\r\n  \r\n  @Input(\"maxboxlength\")\r\n  maxboxlength: number;\r\n\r\n  @Input(\"maxtaglength\")\r\n  maxtaglength: number;\r\n\r\n  @Input(\"maxtags\")\r\n  maxtags: number;\r\n\r\n  @Input(\"mintags\")\r\n  mintags: number;\r\n\r\n  @Input(\"formController\")\r\n  formController: HTMLElement;\r\n\r\n  @Input(\"tags\")\r\n  tags: any;\r\n\r\n  @Input(\"selectedindex\")\r\n  selectedindex: any;\r\n\r\n  @Input(\"delineateby\")\r\n  delineateby: string;\r\n\r\n  @Input(\"format\")\r\n  format: string;\r\n\r\n  @Input(\"autocomplete\")\r\n  autocomplete: string[];\r\n\r\n  @Input(\"selectionpolicy\")\r\n  selectionpolicy: Selectionpolicy;\r\n\r\n  @Input(\"editpolicy\")\r\n  editpolicy: EditPolicy;\r\n\r\n  @Input(\"dragpolicy\")\r\n  dragpolicy: DragDropPolicy;\r\n\r\n\r\n  constructor(private renderer: Renderer, private el: ElementRef) {\r\n\t  \r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.selectedindex && \r\n        (this.selectedindex instanceof String) && \r\n        (this.tags && !(this.tags instanceof String))) {\r\n      const x: string = String(this.selectedindex);\r\n      const list = x.split(\",\");\r\n      list.map((t) => {\r\n        this._selectedindex.push(parseInt(t));\r\n      });\r\n    } else {\r\n      this._selectedindex = this.selectedindex ? this.selectedindex : [];\r\n    }\r\n\r\n    if (this.tags && !(this.tags instanceof Array)) {\r\n      const x: string = String(this.tags);\r\n      this._tags = x.split(this.delineateby ? this.delineateby : \",\");\r\n    } else {\r\n      this._tags = this.tags ? this.tags : [];\r\n    }\r\n    this.renderer.setElementAttribute(this.el.nativeElement,\"role\",\"list\");\r\n  }\r\n\r\n  ngOnChanges(changes) {\r\n\r\n  }\r\n\r\n  itemSelectedAt(index) {\r\n    const canSelect = this.selectionpolicy !== Selectionpolicy.disabled;\r\n    return this._selectedindex.indexOf(index) < 0 ? false : canSelect;\r\n  }\r\n\r\n  itemSelectionClass(index) {\r\n    const selected = this.itemSelectedAt(index);\r\n    return selected ? \"selected\" : ((index < 0 || this.selectionpolicy === Selectionpolicy.disabled) ? \"left-padded\" : \"\");\r\n  }\r\n\r\n  isRemovable() {\r\n    let canRemove = (this.editpolicy === EditPolicy.addAndRemove);\r\n\r\n    canRemove = canRemove || (this.editpolicy === EditPolicy.addRemoveModify);\r\n    canRemove = canRemove || (this.editpolicy === EditPolicy.removeOnly);\r\n\r\n    canRemove = canRemove && (!this.mintags || (this._tags.length > this.mintags));\r\n\r\n    if (!canRemove) {\r\n      this.onerror.emit(\"Unable to remove tag. Operation is not allowed.\");\r\n    }\r\n    return  canRemove;\r\n  }\r\n\r\n  private isDuplicate(name) {\r\n    const flag = this._tags.indexOf(name) < 0 ? false : true;\r\n    if (flag) {\r\n      this.onerror.emit(\"Unable to perform operation. Resulting duplicate tags is not allowed.\");\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  private allowedToaddItem(name) {\r\n    let canAdd = (this.editpolicy === EditPolicy.addAndRemove);\r\n\r\n    canAdd = canAdd || (this.editpolicy === EditPolicy.addRemoveModify);\r\n    canAdd = canAdd || (this.editpolicy === EditPolicy.addOnly);\r\n\r\n    canAdd = canAdd && (!this.maxtags || (this._tags.length < this.maxtags));\r\n\r\n    canAdd = canAdd && !this.isDuplicate(name);\r\n\r\n    if (canAdd && this.maxtaglength) {\r\n      const x = this._tags.join( this.delineateby ? this.delineateby : \",\");\r\n      if (x.length+name.length+1 >= this.maxboxlength) {\r\n        canAdd = false;\r\n        this.onerror.emit(\"Unable to add tag. Resulting content will exceed maxtaglength.\");\r\n      }\r\n    }    \r\n    return  canAdd;\r\n  }\r\n\r\n  private notifyChange() {\r\n    this.tags = (this.tags instanceof Array) ? this._tags : this._tags.join( this.delineateby ? this.delineateby : \",\");\r\n    this.selectedindex = !(this.selectedindex instanceof Array) ? \r\n                          this._selectedindex : \r\n                          (this._selectedindex.length ? this._selectedindex.join(\",\") : \"\");\r\n    this.onchange.emit({\r\n      id: this.id,\r\n      tags: this.tags,\r\n      selecedIndex: this.selectedindex,\r\n      formController: this.formController\r\n    });\r\n  }\r\n  private notifySelection() {\r\n    this.selectedindex = !(this.selectedindex instanceof Array) ? \r\n                        this._selectedindex : \r\n                        (this._selectedindex.length ? this._selectedindex.join(\",\") : \"\");\r\n    this.onselect.emit({\r\n      id: this.id,\r\n      selecedIndex: this.selectedindex,\r\n      formController: this.formController\r\n    });\r\n  }\r\n  private createDropRequest(action, source, destination) {\r\n    return {\r\n      request: \"drop\",\r\n      action: action,\r\n      source: {\r\n        id: source.parent.id,\r\n        name: source.name\r\n      },\r\n      destination: {\r\n        id: destination.parent.id,\r\n        name: destination.name\r\n      }\r\n    }\r\n  }\r\n  private prependTagAt(index, source, destination) {\r\n    let result = false;\r\n    const newName = source.name  + \" \" + this._tags[index];\r\n    if (!this.maxtaglength ||  (this.maxtaglength && source.name.length <= this.maxtaglength)) {\r\n      if (this.beforeAction(this.createDropRequest(\"prepend\", source, destination))) {\r\n        this._tags[index] = newName;\r\n        result = true;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  private appendTagAt(index, source, destination) {\r\n    let result = false;\r\n    const newName = this._tags[index] + \" \" + source.name;\r\n    if (!this.maxtaglength ||  (this.maxtaglength && source.name.length <= this.maxtaglength)) {\r\n      if (this.beforeAction(this.createDropRequest(\"append\", source, destination))) {\r\n        this._tags[index] = newName;\r\n        result = true;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  removeTagWithName(name) {\r\n    if (this.isRemovable() && this.beforeAction({request:\"remove\", item: name})) {\r\n      if (this._selectedindex instanceof Array) {\r\n        const index = this._tags.indexOf(name);\r\n        const i = this._selectedindex.indexOf(index);\r\n  \r\n        this._tags.splice(index,1);\r\n        if (i >= 0) {\r\n          this._selectedindex.splice(i,1);\r\n          this.notifyChange();\r\n        }\r\n      } else {\r\n        this._selectedindex = [];\r\n      }\r\n    }\r\n  }\r\n  addTagWithName(name) {\r\n    let index = this._tags.indexOf(name);\r\n    const i = this._selectedindex.indexOf(index);\r\n    \r\n    if (index < 0  && \r\n        name.length && \r\n        this.allowedToaddItem(name) && \r\n        this.beforeAction({request:\"add\", item: name})) {\r\n      this._tags.push(name);\r\n      this.notifyChange();\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  onTagRemove(event: TagComponent) {\r\n    this.removeTagWithName(event.name);\r\n  }\r\n\r\n  onTagAdd(event: TagComponent) {\r\n    if (this.addTagWithName(event.name)) {\r\n      event.name = \"\";\r\n      event.click(null);\r\n    } else {\r\n      event.reset();\r\n    }\r\n  }\r\n\r\n  onTagChange(event: TagComponent) {\r\n    if (!this.isDuplicate(event.name) && this.beforeAction({request:\"change\", item: event.originalName, to: event.name})) {\r\n      const index = this._tags.indexOf(event.originalName);\r\n      \r\n      this._tags[index] = event.name;\r\n      event.init();\r\n      this.notifyChange();\r\n    } else {\r\n      event.reset();\r\n    }\r\n  }\r\n\r\n  onTagDrop(event) {\r\n    const sind = this._tags.indexOf(event.source.name);\r\n    const dind = this._tags.indexOf(event.destination.name);\r\n\r\n    if (this.dragpolicy === DragDropPolicy.appendOnDrop) {\r\n      if (event.source.parent.id === event.destination.parent.id) {\r\n        if (this.appendTagAt(dind, event.source, event.destination)) {\r\n          const i = this._selectedindex.indexOf(sind);\r\n          this._tags.splice(sind,1);\r\n          this._selectedindex.splice(i,1);\r\n          this.notifyChange();\r\n        }\r\n      } else {\r\n        if (this.appendTagAt(dind, event.source, event.destination)) {\r\n          this.notifyChange();\r\n          event.source.parent.removeTagWithName(event.source.name);\r\n        }\r\n      }\r\n    } else if (this.dragpolicy === DragDropPolicy.prependOnDrop) {\r\n      if (event.source.parent.id === event.destination.parent.id) {\r\n        if (this.prependTagAt(dind, event.source, event.destination)) {\r\n          const i = this._selectedindex.indexOf(sind);\r\n          this._tags.splice(sind,1);\r\n          this._selectedindex.splice(i,1);\r\n          this.notifyChange();\r\n        }\r\n      } else {\r\n        if (this.prependTagAt(dind, event.source, event.destination)) {\r\n          this.notifyChange();\r\n          event.source.parent.removeTagWithName(event.source.name);\r\n        }\r\n      }\r\n    } if (this.dragpolicy === DragDropPolicy.swapOnDrop) {\r\n      if (this.beforeAction(this.createDropRequest(\"swap\", event.source, event.destination))) {\r\n        if (event.source.parent.id === event.destination.parent.id) {\r\n          this._tags[sind] = this._tags.splice(dind, 1, this._tags[sind])[0];\r\n          this.notifyChange();\r\n        } else {\r\n          if (this.addTagWithName(event.source.name)) {\r\n            this.removeTagWithName(event.destination.name);\r\n            event.source.parent.removeTagWithName(event.source.name);\r\n          }\r\n        }\r\n      }\r\n    } \r\n  }\r\n  onTagSelect(event: TagComponent) {\r\n    if (this.selectionpolicy !== Selectionpolicy.disabled) {\r\n      this.onTagFocus(event);\r\n      if (this.beforeAction({request:\"select\", item: event.name})) {\r\n        if (this.selectionpolicy === Selectionpolicy.singleSelect) {\r\n          const list = this.el.nativeElement.childNodes;\r\n          for(let i=0; i < list.length; i++){\r\n            // 3 is text and 8 is comment\r\n            if (list[i].nodeType !== 3 && list[i].nodeType !== 8) {\r\n              this.renderer.setElementClass(list[i], \"selected\", false)\r\n            }\r\n          }\r\n          const index = this._tags.indexOf(event.name);\r\n          if (index >= 0) {\r\n            const i = this._selectedindex.indexOf(index);\r\n  \r\n            if (i < 0) {\r\n              this.renderer.setElementClass(event.el.nativeElement, \"selected\", true);\r\n              this._selectedindex = [index];\r\n            } else {\r\n              this.renderer.setElementClass(event.el.nativeElement, \"selected\", false)\r\n              this._selectedindex = [];\r\n            }\r\n            this.notifySelection();\r\n          }\r\n        } else {\r\n          const index = this._tags.indexOf(event.name);\r\n  \r\n          if (index >= 0) {\r\n            const i = this._selectedindex.indexOf(index);\r\n  \r\n            if (i < 0) {\r\n              this.renderer.setElementClass(event.el.nativeElement, \"selected\", true);\r\n              this._selectedindex.push(index);\r\n            } else {\r\n              this.renderer.setElementClass(event.el.nativeElement, \"selected\", false)\r\n              this._selectedindex.splice(i,1);\r\n            }\r\n            this.notifySelection();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  onTagFocus(event: TagComponent) {\r\n    if (this.selectionpolicy !== Selectionpolicy.disabled) {\r\n      const list = this.el.nativeElement.childNodes;\r\n      for(let i=0; i < list.length; i++){\r\n        // 3 is text and 8 is comment\r\n        if (list[i].nodeType !== 3 && list[i].nodeType !== 8) {\r\n          this.renderer.setElementClass(list[i], \"focused\", false)\r\n        }\r\n      }\r\n      const index = this._tags.indexOf(event.name);\r\n      if (index >= 0) {\r\n        this.renderer.setElementClass(event.el.nativeElement, \"focused\", true);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class TagTransfer {\r\n    \r\n    private data: any = {};\r\n\r\n    constructor() {}\r\n\r\n    setData(name: string, value: any){\r\n        this.data[name] = value;\r\n    }\r\n\r\n    getData(name: string) {\r\n        return this.data[name];\r\n    }\r\n            \r\n}","/*\r\n * A comparision tree will layout each attribute of a json deep through its heirarchy with given visual queues\r\n * that represents a deletion, adition, or change of attribute from the other tree. The status of each node is \r\n * evaluated by the parent comparision tool.\r\n */\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  HostListener,\r\n  ElementRef,\r\n  Renderer,\r\n  ViewChild,\r\n  EventEmitter\r\n} from '@angular/core';\r\n\r\nimport { InToPipe } from '@sedeh/into-pipes';\r\n\r\nimport {\r\n  DragDropPolicy,\r\n  Selectionpolicy,\r\n  EditPolicy\r\n} from '../interfaces/tagbox.interfaces';\r\n\r\nimport { TagTransfer } from './tag.transfer';\r\n\r\n@Component({\r\n  selector: 'tag',\r\n  templateUrl: './tag.component.html',\r\n  styleUrls: ['./tag.component.scss'],\r\n})\r\nexport class TagComponent implements OnInit {\r\n  editMode: boolean;\r\n\r\n  originalName: string;\r\n  selectedFiller = -1;\r\n  fillerList: string[];\r\n\r\n  @Output(\"onfocus\")\r\n  onfocus= new EventEmitter()\r\n\r\n  @Output(\"onchange\")\r\n  onchange= new EventEmitter()\r\n\r\n  @Output(\"onselect\")\r\n  onselect= new EventEmitter()\r\n\r\n  @Output(\"onremove\")\r\n  onremove= new EventEmitter()\r\n\r\n  @Output(\"onadd\")\r\n  onadd= new EventEmitter()\r\n\r\n  @Output(\"ondrop\")\r\n  ondrop= new EventEmitter()\r\n\r\n  @Input(\"format\")\r\n  format: string;\r\n\r\n  @Input(\"removable\")\r\n  removable: boolean;\r\n\r\n  @Input(\"maxlength\")\r\n  maxlength: string;\r\n\r\n  @Input(\"name\")\r\n  name: string;\r\n\r\n  @Input(\"placeholder\")\r\n  placeholder: boolean;\r\n\r\n  @Input(\"parent\")\r\n  parent: any;\r\n\r\n  @Input(\"autocomplete\")\r\n  autocomplete: string[];\r\n\r\n  @Input(\"selectionpolicy\")\r\n  selectionpolicy: Selectionpolicy;\r\n\r\n  @Input(\"editpolicy\")\r\n  editpolicy: EditPolicy;\r\n\r\n  @Input(\"dragpolicy\")\r\n  dragpolicy: DragDropPolicy;\r\n\r\n  @ViewChild(\"editor\")\r\n  editor;\r\n\r\n  @ViewChild(\"selector\")\r\n  selector;\r\n\r\n  @ViewChild(\"holder\")\r\n  holder;\r\n\r\n  @ViewChild(\"filler\")\r\n  filler;\r\n\r\n  constructor(\r\n    private dataTransfer: TagTransfer,\r\n    private into: InToPipe,\r\n    public el: ElementRef, \r\n    private renderer: Renderer\r\n  ){\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.init();\r\n    this.el.nativeElement.draggable = (this.dragpolicy !== DragDropPolicy.disabled);\r\n  }\r\n\r\n  @HostListener('dragstart', ['$event']) \r\n  dragStart(event: any) {\r\n      event.stopPropagation();\t\r\n      if (this.allowDrag()) {\r\n        event.dataTransfer.setData(\"source\",this.name); // this is needed to get the darg/drop going..\r\n        this.dataTransfer.setData(\"source\",this); // this is needed because event data transfer takes string not bject\r\n      }\r\n  }\r\n  @HostListener('drag', ['$event']) \r\n  drag(event: any) {}\r\n  \r\n  @HostListener('dragend', ['$event']) \r\n  dragEnd(event: any) {\r\n      event.stopPropagation();\t\r\n\r\n      this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n  }\r\n  @HostListener('drop', ['$event'])\r\n  drop(event: any) {\r\n    event.preventDefault();\r\n    this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n    this.ondrop.emit({\r\n      source: this.dataTransfer.getData(\"source\"),\r\n      destination: this\r\n    })\r\n  }\r\n  \r\n  @HostListener('dragenter', ['$event']) \r\n  dragEnter(event: any) {\r\n      event.preventDefault();\r\n      if (this.allowDrop(event)) {\r\n          this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", true);\r\n      } else {\r\n          this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n      }\r\n  }\r\n  \r\n  @HostListener('dragleave', ['$event']) \r\n  dragLeave(event: any) {\r\n      event.preventDefault();\r\n              \r\n      this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n  }\r\n  \r\n  @HostListener('dragover', ['$event']) \r\n  dragOver(event: any) {\r\n      if (this.allowDrop(event)) {\r\n          event.preventDefault();\r\n          this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", true);\r\n      } else {\r\n          this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n      }\r\n  }\r\n  \r\n  allowDrop(event: any): boolean {\r\n      const source = this.dataTransfer.getData(\"source\");\r\n      const allow = (source && source.name != this.name) && \r\n                    (this.name && this.name.length > 0) &&\r\n                    ((!source.format && !this.format) || source.format == this.format);\r\n      return allow;\r\n  }\r\n\r\n  allowDrag() : boolean {\r\n    return (this.dragpolicy !== DragDropPolicy.disabled) && this.name && this.name.length > 0;\r\n  }\r\n\r\n  @HostListener('keyup', ['$event']) \r\n  keyup(event: any) {\r\n    if (event.target === this.el.nativeElement ||\r\n       (this.editor && event.target === this.editor.nativeElement)) {\r\n      const code = event.which;\r\n      if (code === 13) { // cariage return\r\n        this.click(event)\r\n      }else if (code === 9 && this.editMode) { // tab out\r\n        setTimeout(()=>{\r\n          this.editMode = false;\r\n          if (this.originalName.length && this.originalName !== this.name) {\r\n            this.onchange.emit(this);\r\n          } else {\r\n            this.onadd.emit(this);\r\n          }\r\n        }, 66);\r\n      }else if (code === 38) { // arrow up\r\n        if (this.filler) {\r\n          if (this.selectedFiller >= 0) {\r\n            this.selectedFiller--;\r\n          } else {\r\n            this.selectedFiller = this.fillerList.length - 1;\r\n          }         \r\n        }\r\n      } else if (code === 40) { // arrow down\r\n        if (this.filler) {\r\n          if (this.selectedFiller < (this.fillerList.length - 1)) {\r\n            this.selectedFiller++;\r\n          } else {\r\n            this.selectedFiller = -1;\r\n          }   \r\n        }\r\n      }\r\n    } else if (this.selector && event.target === this.selector.nativeElement) {\r\n      const code = event.which;\r\n      if (code === 13) { // cariage return\r\n        if (this.isSelectable()) {\r\n          this.onselect.emit(this)\r\n        }\r\n      }\r\n    } else  if (this.holder && event.target === this.holder.nativeElement) {\r\n      const code = event.which;\r\n      if (code === 13) { // cariage return\r\n        this.editMode = true;\r\n        setTimeout(()=>this.editor.nativeElement.focus(),33);\r\n      }      \r\n    } else {\r\n      const code = event.which;\r\n      if (code === 13) { // cariage return\r\n        this.remove();\r\n      }      \r\n    }\r\n  }\r\n\r\n  @HostListener('click', ['$event']) \r\n  click(event: Event) {\r\n    if (this.selector && event.target === this.selector.nativeElement) {\r\n      if (this.isSelectable()) {\r\n        this.onselect.emit(this)\r\n      }\r\n    } else if (this.isEditable()) {\r\n      this.editMode = !this.editMode;\r\n      if (this.editMode) {\r\n        setTimeout(()=>{\r\n          if (this.filler) {\r\n            this.selectedFiller = -1;\r\n            this.updateFillerList(this.name);\r\n          }\r\n          if (this.editor) {\r\n            this.editor.nativeElement.focus();\r\n            if (this.filler) {\r\n              this.renderer.setElementClass(this.filler.nativeElement, \"off\", false);\r\n            }\r\n          }\r\n        },66);\r\n      } else if (this.selectedFiller >= 0) {\r\n        this.name = this.fillerList[this.selectedFiller];\r\n      }\r\n      if (this.originalName.length) {\r\n        if (this.originalName !== this.name) {\r\n          this.onchange.emit(this);\r\n        }\r\n        if (!this.editMode) {\r\n          setTimeout(()=>{this.el.nativeElement.focus() },66);\r\n        }\r\n      } else {\r\n        this.onadd.emit(this);\r\n      }\r\n    }\r\n  }\r\n\r\n  @HostListener('focus', ['$event']) \r\n  focus(event: any) {\r\n    if (this.isSelectable()) {\r\n      this.onfocus.emit(this)\r\n    }\r\n  }\r\n\r\n  isRemovable() {\r\n    let canRemove = (this.editpolicy === EditPolicy.addAndRemove);\r\n\r\n    canRemove = canRemove || (this.editpolicy === EditPolicy.addRemoveModify);\r\n    canRemove = canRemove || (this.editpolicy === EditPolicy.removeOnly);\r\n    \r\n    return  canRemove;\r\n  }\r\n\r\n  isEditable() {\r\n    return  (this.editpolicy === EditPolicy.addRemoveModify);\r\n  }\r\n\r\n  isDraggable() {\r\n    return  (this.dragpolicy !== DragDropPolicy.disabled);\r\n  }\r\n\r\n  isSelectable() {\r\n    return  (this.selectionpolicy !== Selectionpolicy.disabled);\r\n  }\r\n  select() {\r\n    \r\n  }\r\n\r\n  tabout(event: any) {\r\n    setTimeout(() => {\r\n      this.name = this.selectedFiller < 0 ? event.target.value : this.fillerList[this.selectedFiller];\r\n      this.editMode = false;\r\n      if (this.originalName.length && this.originalName !== this.name) {\r\n        this.onchange.emit(this);\r\n      } else {\r\n        this.onadd.emit(this);\r\n      }\r\n    }, 66)\r\n  }\r\n  edit(event: any) {\r\n    this.name = event.target.value;\r\n    this.updateFillerList(this.name);\r\n  }\r\n\r\n  updateFillerList(value) {\r\n    if (value && this.autocomplete instanceof Array){\r\n      if (value) {\r\n        this.fillerList = this.autocomplete.filter((item) => item.indexOf(value) >= 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  init() {\r\n    this.originalName = this.name;\r\n  }\r\n  reset() {\r\n    this.name = this.originalName;\r\n  }\r\n\r\n  remove() {\r\n    if (this.isRemovable()) {\r\n      this.onremove.emit(this);\r\n    }\r\n  }\r\n\r\n  formattedName() {\r\n    let result = this.name;\r\n    if (this.format) {\r\n      result = this.into.transform(this.name, this.format);\r\n    }\r\n    return result;\r\n  }\r\n\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IntoPipeModule } from '@sedeh/into-pipes';\r\nimport { DragDropModule } from '@sedeh/drag-enabled';\r\n\r\nimport { TagComponent } from './components/tag.component';\r\nimport { TagBoxComponent } from './components/tagbox.component';\r\nimport { TagTransfer } from './components/tag.transfer';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IntoPipeModule,\r\n    DragDropModule\r\n  ],\r\n  declarations: [\r\n    TagBoxComponent,\r\n    TagComponent\r\n  ],\r\n  exports: [\r\n    TagBoxComponent\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  providers: [\r\n    TagTransfer\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class TagBoxModule {}\r\n"]}