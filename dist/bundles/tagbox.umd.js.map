{
  "version": 3,
  "file": "tagbox.umd.js",
  "sources": [
    "ng://tagbox/out/src/app/tagbox/components/tag.component.ts",
    "ng://tagbox/out/src/app/tagbox/components/tagbox.component.ts"
  ],
  "sourcesContent": [
    "/*\r\n * A comparision tree will layout each attribute of a json deep through its heirarchy with given visual queues\r\n * that represents a deletion, adition, or change of attribute from the other tree. The status of each node is \r\n * evaluated by the parent comparision tool.\r\n */\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  HostListener,\r\n  ElementRef,\r\n  Renderer,\r\n  ViewChild,\r\n  EventEmitter\r\n} from '@angular/core';\r\n\r\nimport {\r\n  DragDropPolicy,\r\n  Selectionpolicy,\r\n  EditPolicy\r\n} from '../interfaces/tagbox.interfaces';\r\n\r\n@Component({\r\n  selector: 'tag',\r\n  template: `\r\n<span #selector\r\n    *ngIf=\"!editMode && removable && isSelectable()\" \r\n    tabindex=\"0\" \r\n    class=\"selection fa\"\r\n    (click)=\"select()\"></span>\r\n<input \r\n    *ngIf=\"editMode\" \r\n    class=\"editor\" \r\n    (blur)=\"tabout($event)\"\r\n    (keyup)=\"edit($event)\" \r\n    [value]=\"name\"\r\n    [attr.maxlength]=\"maxlength\"\r\n    [attr.placeholder]=\"placeholder\" #editor/>\r\n<div class=\"autocomplete off\" *ngIf=\"editMode && autocomplete\" #filler>\r\n  <ul>\r\n      <li *ngFor=\"let x of fillerList; let i = index\" \r\n        (click)=\"selectedFiller = i\" \r\n        [class.selected]=\"selectedFiller === i\"\r\n        [textContent]=\"x\"></li>\r\n  </ul>\r\n</div>\r\n<span \r\n    *ngIf=\"!editMode\" \r\n    class=\"holder\" \r\n    [textContent]=\"placeholder ? placeholder : formattedName()\"></span>\r\n<span \r\n    *ngIf=\"!editMode && removable\" \r\n    tabindex=\"0\" \r\n    class=\"remove fa fa-times\" \r\n    (click)=\"remove()\"></span>\r\n<span \r\n    *ngIf=\"!removable\" \r\n    class=\"placeholder fa fa-plus-circle\"></span>`,\r\n  styles: [`:host{\n  cursor:pointer;\n  color:#fdfdfd;\n  margin:4px 2px;\n  display:inline-block;\n  background-color:#1F84AB;\n  border:1px solid #015E85;\n  border-radius:8px 20px 20px 8px;\n  -webkit-box-sizing:border-box;\n          box-sizing:border-box;\n  padding:3px 0;\n  position:relative; }\n  :host.left-padded{\n    padding-left:8px; }\n  :host.drag-over:hover{\n    background-color:#add8e6;\n    cursor:move; }\n  :host[placeholder]{\n    background-color:transparent;\n    color:#000;\n    border:0; }\n    :host[placeholder]:hover{\n      background-color:#eee !important; }\n    :host[placeholder] .editor{\n      color:#000; }\n  :host:hover{\n    background-color:#027912 !important;\n    border-color:#024b0b !important; }\n  :host.focused{\n    background-color:#027912 !important;\n    border-color:#024b0b !important; }\n  :host.selected:hover{\n    background-color:#D6534E; }\n  :host.selected{\n    background-color:#D6534E; }\n    :host.selected .selection.fa:before{\n      content:\"\\\\f00c\" !important; }\n  :host .selection{\n    background-color:transparent;\n    float:left;\n    margin-right:3px;\n    padding:0;\n    width:10px;\n    height:10px;\n    font-size:0.8rem;\n    padding:5px 3px; }\n    :host .selection.fa:before{\n      content:\"\\\\f013\"; }\n  :host .editor{\n    background-color:transparent;\n    overflow:unset;\n    max-width:inherit;\n    width:inherit;\n    color:#fff;\n    border:none; }\n  :host .placeholder{\n    color:#888585;\n    float:right;\n    font-size:1rem;\n    height:20px;\n    line-height:20px;\n    margin-left:5px;\n    text-align:center;\n    width:20px; }\n  :host .remove{\n    float:right;\n    font-size:0.7rem;\n    height:20px;\n    width:20px;\n    color:#fff;\n    text-align:center;\n    margin-left:5px;\n    line-height:20px;\n    font-weight:bolder; }\n  :host .holder{\n    pointer-events:none;\n    -webkit-user-select:none;\n    -moz-user-select:none;\n    -ms-user-select:none;\n    user-select:none; }\n  :host .autocomplete{\n    position:absolute;\n    top:26px;\n    z-index:5; }\n    :host .autocomplete.off{\n      display:none; }\n    :host .autocomplete ul{\n      border:1px solid #024b0b;\n      border-top:0;\n      list-style:none;\n      background-color:#027912;\n      list-style-position:inside;\n      margin:0;\n      max-height:150px;\n      overflow-y:auto;\n      padding:0; }\n      :host .autocomplete ul li{\n        color:#fdfdfd;\n        padding:5px;\n        white-space:nowrap; }\n        :host .autocomplete ul li.selected{\n          background-color:#D6534E; }\n        :host .autocomplete ul li:hover{\n          background-color:#0446a8;\n          color:#fff; }\n`],\r\n})\r\nexport class TagComponent implements OnInit {\r\n  editMode: boolean;\r\n\r\n  originalName: string;\r\n  selectedFiller = -1;\r\n  fillerList: string[];\r\n\r\n  @Output(\"onfocus\")\r\n  onfocus= new EventEmitter()\r\n\r\n  @Output(\"onchange\")\r\n  onchange= new EventEmitter()\r\n\r\n  @Output(\"onselect\")\r\n  onselect= new EventEmitter()\r\n\r\n  @Output(\"onremove\")\r\n  onremove= new EventEmitter()\r\n\r\n  @Output(\"onadd\")\r\n  onadd= new EventEmitter()\r\n\r\n  @Output(\"ondrop\")\r\n  ondrop= new EventEmitter()\r\n\r\n  @Input(\"format\")\r\n  format: string;\r\n\r\n  @Input(\"removable\")\r\n  removable: boolean;\r\n\r\n  @Input(\"maxlength\")\r\n  maxlength: string;\r\n\r\n  @Input(\"name\")\r\n  name: string;\r\n\r\n  @Input(\"placeholder\")\r\n  placeholder: boolean;\r\n\r\n  @Input(\"autocomplete\")\r\n  autocomplete: string[];\r\n\r\n  @Input(\"selectionpolicy\")\r\n  selectionpolicy: Selectionpolicy;\r\n\r\n  @Input(\"editpolicy\")\r\n  editpolicy: EditPolicy;\r\n\r\n  @Input(\"dragpolicy\")\r\n  dragpolicy: DragDropPolicy;\r\n\r\n  @ViewChild(\"editor\")\r\n  editor;\r\n\r\n  @ViewChild(\"selector\")\r\n  selector;\r\n\r\n  @ViewChild(\"filler\")\r\n  filler;\r\n\r\n  constructor(\r\n    public el: ElementRef, \r\n    private renderer: Renderer\r\n  ){\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.init();\r\n    this.el.nativeElement.draggable = (this.dragpolicy !== DragDropPolicy.disabled);\r\n  }\r\n\r\n  @HostListener('dragstart', ['$event']) \r\n  dragStart(event) {\r\n      event.stopPropagation();\t\r\n      if (this.allowDrag()) {\r\n          event.dataTransfer.setData(\"source\",this.name);\r\n      }\r\n  }\r\n  @HostListener('drag', ['$event']) \r\n  drag(event) {}\r\n  \r\n  @HostListener('dragend', ['$event']) \r\n  dragEnd(event) {\r\n      event.stopPropagation();\t\r\n\r\n      this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n  }\r\n  @HostListener('drop', ['$event'])\r\n  drop(event) {\r\n    event.preventDefault();\r\n    this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n    this.ondrop.emit({\r\n      source: event.dataTransfer.getData(\"source\"),\r\n      destination: this.name\r\n    })\r\n  }\r\n  \r\n  @HostListener('dragenter', ['$event']) \r\n  dragEnter(event) {\r\n      event.preventDefault();\r\n      if (this.allowDrop(event)) {\r\n          this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", true);\r\n      } else {\r\n          this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n      }\r\n  }\r\n  \r\n  @HostListener('dragleave', ['$event']) \r\n  dragLeave(event) {\r\n      event.preventDefault();\r\n              \r\n      this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n  }\r\n  \r\n  @HostListener('dragover', ['$event']) \r\n  dragOver(event) {\r\n      if (this.allowDrop(event)) {\r\n          event.preventDefault();\r\n          this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", true);\r\n      } else {\r\n          this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n      }\r\n  }\r\n  \r\n  allowDrop(event): boolean {\r\n      const source = event.dataTransfer.getData(\"source\");\r\n\r\n      return (source && source != this.name) && this.name && this.name.length > 0;\r\n  }\r\n\r\n  allowDrag() : boolean {\r\n    return (this.dragpolicy !== DragDropPolicy.disabled) && this.name && this.name.length > 0;\r\n  }\r\n\r\n  @HostListener('keyup', ['$event']) \r\n  keyup(event) {\r\n    if (event.target === this.el.nativeElement ||\r\n       (this.editor && event.target === this.editor.nativeElement)) {\r\n      const code = event.which;\r\n      if (code === 13) { // cariage return\r\n        this.click(event)\r\n      }else if (code === 9 && this.editMode) { // tab out\r\n        setTimeout(()=>{\r\n          this.editMode = false;\r\n          if (this.originalName.length && this.originalName !== this.name) {\r\n            this.onchange.emit(this);\r\n          } else {\r\n            this.onadd.emit(this);\r\n          }\r\n        }, 66);\r\n      }else if (code === 38) { // arrow up\r\n        if (this.filler) {\r\n          if (this.selectedFiller >= 0) {\r\n            this.selectedFiller--;\r\n          } else {\r\n            this.selectedFiller = this.fillerList.length - 1;\r\n          }         \r\n        }\r\n      } else if (code === 40) { // arrow down\r\n        if (this.filler) {\r\n          if (this.selectedFiller < (this.fillerList.length - 1)) {\r\n            this.selectedFiller++;\r\n          } else {\r\n            this.selectedFiller = -1;\r\n          }   \r\n        }\r\n      }\r\n    } else if (this.selector && event.target === this.selector.nativeElement) {\r\n      const code = event.which;\r\n      if (code === 13) { // cariage return\r\n        if (this.isSelectable()) {\r\n          this.onselect.emit(this)\r\n        }\r\n      }\r\n    } else {\r\n      const code = event.which;\r\n      if (code === 13) { // cariage return\r\n        this.remove();\r\n      }      \r\n    }\r\n  }\r\n\r\n  @HostListener('click', ['$event']) \r\n  click(event) {\r\n    if (this.selector && event.target === this.selector.nativeElement) {\r\n      if (this.isSelectable()) {\r\n        this.onselect.emit(this)\r\n      }\r\n    } else if (this.isEditable()) {\r\n      this.editMode = !this.editMode;\r\n      if (this.editMode) {\r\n        setTimeout(()=>{\r\n          if (this.filler) {\r\n            this.selectedFiller = -1;\r\n            this.updateFillerList(this.name);\r\n          }\r\n          if (this.editor) {\r\n            this.editor.nativeElement.focus();\r\n            if (this.filler) {\r\n              this.renderer.setElementClass(this.filler.nativeElement, \"off\", false);\r\n            }\r\n          }\r\n        },66);\r\n      } else if (this.selectedFiller >= 0) {\r\n        this.name = this.fillerList[this.selectedFiller];\r\n      }\r\n      if (this.originalName.length) {\r\n        if (this.originalName !== this.name) {\r\n          this.onchange.emit(this);\r\n        }\r\n        if (!this.editMode) {\r\n          setTimeout(()=>{this.el.nativeElement.focus() },66);\r\n        }\r\n      } else {\r\n        this.onadd.emit(this);\r\n      }\r\n    }\r\n  }\r\n\r\n  @HostListener('focus', ['$event']) \r\n  focus(event) {\r\n    if (this.isSelectable()) {\r\n      this.onfocus.emit(this)\r\n    }\r\n  }\r\n\r\n  isRemovable() {\r\n    let canRemove = (this.editpolicy === EditPolicy.addAndRemove);\r\n\r\n    canRemove = canRemove || (this.editpolicy === EditPolicy.removeOnly);\r\n    \r\n    return  canRemove;\r\n  }\r\n\r\n  isEditable() {\r\n    return  (this.editpolicy !== EditPolicy.viewOnly);\r\n  }\r\n\r\n  isDraggable() {\r\n    return  (this.dragpolicy !== DragDropPolicy.disabled);\r\n  }\r\n\r\n  isSelectable() {\r\n    return  (this.selectionpolicy !== Selectionpolicy.disabled);\r\n  }\r\n  select() {\r\n    \r\n  }\r\n\r\n  tabout(event) {\r\n    setTimeout(() => {\r\n      this.name = this.selectedFiller < 0 ? event.target.value : this.fillerList[this.selectedFiller];\r\n      this.editMode = false;\r\n      if (this.originalName.length && this.originalName !== this.name) {\r\n        this.onchange.emit(this);\r\n      } else {\r\n        this.onadd.emit(this);\r\n      }\r\n    }, 66)\r\n  }\r\n  edit(event) {\r\n    this.name = event.target.value;\r\n    this.updateFillerList(this.name);\r\n  }\r\n\r\n  updateFillerList(value) {\r\n    if (value && this.autocomplete instanceof Array){\r\n      if (value) {\r\n        this.fillerList = this.autocomplete.filter((item) => item.indexOf(value) >= 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  init() {\r\n    this.originalName = this.name;\r\n  }\r\n  reset() {\r\n    this.name = this.originalName;\r\n  }\r\n\r\n  remove() {\r\n    if (this.isRemovable()) {\r\n      this.onremove.emit(this);\r\n    }\r\n  }\r\n\r\n  formattedName() {\r\n    let result = this.name;\r\n    if (this.format) {\r\n\r\n    }\r\n    return result;\r\n  }\r\n\r\n}\r\n",
    "/*\r\n * Comparision Tool will layout two comparision trees side by side and feed them an internal object\r\n * heirarchy created for internal use from JSON objects given to this component.\r\n */\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  OnChanges,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  Renderer\r\n} from '@angular/core';\r\n\r\nimport {\r\n  DragDropPolicy,\r\n  Selectionpolicy,\r\n  EditPolicy\r\n} from '../interfaces/tagbox.interfaces';\r\n\r\nimport { TagComponent } from './tag.component';\r\n\r\n@Component({\r\n  selector: 'tagbox',\r\n  template: `\r\n<tag theme\r\n    *ngFor=\"let t of _tags; let i=index\"\r\n    tabindex=\"0\"\r\n    [class]=\"itemSelectionClass(i)\"\r\n    [name]=\"t\"\r\n    [removable]=\"isRemovable()\"\r\n    [maxlength]=\"maxtaglength\"\r\n    [format]=\"format\"\r\n    [autocomplete]=\"autocomplete\"\r\n    [attr.role]=\"'listitem'\"\r\n    [selectionpolicy]=\"selectionpolicy\"\r\n    [editpolicy]=\"editpolicy\" \r\n    [dragpolicy]=\"dragpolicy\"\r\n    (ondrop)=\"onTagDrop($event)\"\r\n    (onchange)=\"onTagChange($event)\"\r\n    (onadd)=\"onTagAdd($event)\"\r\n    (onremove)=\"onTagRemove($event)\"\r\n    (onselect)=\"onTagSelect($event)\"\r\n    (onfocus)=\"onTagFocus($event)\">\r\n</tag><tag theme\r\n    placeholder\r\n    tabindex=\"0\"\r\n    name=\"\"\r\n    [class]=\"itemSelectionClass(-1)\"\r\n    [maxlength]=\"maxtaglength\"\r\n    [placeholder]=\"placeholder\"\r\n    [format]=\"format\"\r\n    [autocomplete]=\"autocomplete\"\r\n    [attr.role]=\"'listitem'\"\r\n    [selectionpolicy]=\"selectionpolicy\"\r\n    [editpolicy]=\"editpolicy\" \r\n    [dragpolicy]=\"dragpolicy\"\r\n    (ondrop)=\"onTagDrop($event)\"\r\n    (onchange)=\"onTagChange($event)\"\r\n    (onadd)=\"onTagAdd($event)\"\r\n    (onremove)=\"onTagRemove($event)\"\r\n    (onfocus)=\"onTagFocus($event)\"></tag>\r\n`,\r\n  styles: [`:host{\n  background-color:#fff;\n  border:1px inset #888;\n  -webkit-box-sizing:border-box;\n  box-sizing:border-box;\n  display:inline-block;\n  min-height:50px;\n  padding:5px;\n  width:100%;\n  border-radius:5px;\n  margin-bottom:5px; }\n  :host.alert{\n    background-color:#ff9f9b;\n    border-color:#880500; }\n\n:host:focus{\n  border-color:#0ba; }\n\n:host:hover{\n  background-color:#ddd; }\n`],\r\n})\r\nexport class TagBoxComponent implements OnInit, OnChanges {\r\n\r\n  _tags: string[] = [];\r\n  _selectedindex: number[] = [];\r\n  \r\n  @Output(\"onchange\")\r\n  onchange= new EventEmitter()\r\n\r\n  @Output(\"onselect\")\r\n  onselect= new EventEmitter()\r\n\r\n  @Input(\"beforeAction\")\r\n  beforeAction = (event) => true;\r\n\r\n  @Input(\"id\")\r\n  id: string;\r\n\r\n  @Input(\"placeholder\")\r\n  placeholder: string = \"Add Tag\";\r\n  \r\n  @Input(\"maxboxlength\")\r\n  maxboxlength: number;\r\n\r\n  @Input(\"maxtaglength\")\r\n  maxtaglength: number;\r\n\r\n  @Input(\"maxtags\")\r\n  maxtags: number;\r\n\r\n  @Input(\"mintags\")\r\n  mintags: number;\r\n\r\n  @Input(\"tags\")\r\n  tags: any;\r\n\r\n  @Input(\"selectedindex\")\r\n  selectedindex: any;\r\n\r\n  @Input(\"delineateby\")\r\n  delineateby: string;\r\n\r\n  @Input(\"format\")\r\n  format: string;\r\n\r\n  @Input(\"autocomplete\")\r\n  autocomplete: string[];\r\n\r\n  @Input(\"selectionpolicy\")\r\n  selectionpolicy: Selectionpolicy;\r\n\r\n  @Input(\"editpolicy\")\r\n  editpolicy: EditPolicy;\r\n\r\n  @Input(\"dragpolicy\")\r\n  dragpolicy: DragDropPolicy;\r\n\r\n\r\n  constructor(private renderer: Renderer, private el: ElementRef) {\r\n\t  \r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.selectedindex && \r\n        (this.selectedindex instanceof String) && \r\n        (this.tags && !(this.tags instanceof String))) {\r\n      const x: string = String(this.selectedindex);\r\n      const list = x.split(\",\");\r\n      list.map((t) => {\r\n        this._selectedindex.push(parseInt(t));\r\n      });\r\n    } else {\r\n      this._selectedindex = this.selectedindex;\r\n    }\r\n\r\n    if (this.tags && !(this.tags instanceof Array)) {\r\n      const x: string = String(this.tags);\r\n      this._tags = x.split(this.delineateby ? this.delineateby : \",\");\r\n    } else {\r\n      this._tags = this.tags;\r\n    }\r\n    this.renderer.setElementAttribute(this.el.nativeElement,\"role\",\"list\");\r\n  }\r\n\r\n  ngOnChanges(changes) {\r\n\r\n  }\r\n\r\n  itemSelectedAt(index) {\r\n    const canSelect = this.selectionpolicy !== Selectionpolicy.disabled;\r\n    return this._selectedindex.indexOf(index) < 0 ? false : canSelect;\r\n  }\r\n\r\n  itemSelectionClass(index) {\r\n    const selected = this.itemSelectedAt(index);\r\n    return selected ? \"selected\" : ((index < 0 || this.selectionpolicy === Selectionpolicy.disabled) ? \"left-padded\" : \"\");\r\n  }\r\n\r\n  isRemovable() {\r\n    let canRemove = (this.editpolicy === EditPolicy.addAndRemove);\r\n\r\n    canRemove = canRemove || (this.editpolicy === EditPolicy.removeOnly);\r\n\r\n    canRemove = canRemove && (!this.mintags || (this._tags.length > this.mintags));\r\n    \r\n    return  canRemove;\r\n  }\r\n\r\n  private isDuplicate(name) {\r\n    return this._tags.indexOf(name) < 0 ? false : true;\r\n  }\r\n\r\n  allowedToaddItem(tag) {\r\n    let canAdd = (this.editpolicy === EditPolicy.addAndRemove);\r\n\r\n    canAdd = canAdd || (this.editpolicy === EditPolicy.addOnly);\r\n\r\n    canAdd = canAdd && (!this.maxtags || (this._tags.length < this.maxtags-1));\r\n\r\n    canAdd = canAdd && !this.isDuplicate(tag.name);\r\n\r\n    if (canAdd && this.maxtaglength) {\r\n      const x = this._tags.join( this.delineateby ? this.delineateby : \",\");\r\n      if (x.length+tag.name.length+1 >= this.maxboxlength) {\r\n        canAdd = false;\r\n        this.renderer.setElementClass(this.el.nativeElement, \"alert\", true);\r\n      } else {\r\n        this.renderer.setElementClass(this.el.nativeElement, \"alert\", false);\r\n      }\r\n    }    \r\n    return  canAdd;\r\n  }\r\n\r\n  private notifyChange() {\r\n    this.tags = (this.tags instanceof Array) ? this._tags : this._tags.join( this.delineateby ? this.delineateby : \",\");\r\n    this.selectedindex = !(this.selectedindex instanceof Array) ? \r\n                          this._selectedindex : \r\n                          (this._selectedindex.length ? this._selectedindex.join(\",\") : \"\");\r\n    this.onchange.emit({\r\n      id: this.id,\r\n      tags: this.tags,\r\n      selecedIndex: this.selectedindex\r\n    });\r\n  }\r\n  private notifySelection() {\r\n    this.selectedindex = !(this.selectedindex instanceof Array) ? \r\n                        this._selectedindex : \r\n                        (this._selectedindex.length ? this._selectedindex.join(\",\") : \"\");\r\n    this.onselect.emit({\r\n      id: this.id,\r\n      selecedIndex: this.selectedindex\r\n    });\r\n  }\r\n  onTagRemove(event: TagComponent) {\r\n    if (this.isRemovable() && this.beforeAction({request:\"remove\", item: event.name})) {\r\n      const index = this._tags.indexOf(event.name);\r\n      const i = this._selectedindex.indexOf(index);\r\n\r\n      this._tags.splice(index,1);\r\n      if (i >= 0) {\r\n        this._selectedindex.splice(i,1);\r\n        this.notifyChange();\r\n      }\r\n    }\r\n  }\r\n\r\n  onTagAdd(event: TagComponent) {\r\n    let index = this._tags.indexOf(event.name);\r\n    const i = this._selectedindex.indexOf(index);\r\n    \r\n    if (index < 0  && \r\n        event.name.length && \r\n        this.allowedToaddItem(event) && \r\n        this.beforeAction({request:\"add\", item: event.name})) {\r\n      this._tags.push(event.name);\r\n      event.name = \"\";\r\n      this.notifyChange();\r\n      event.click(null);\r\n    } else {\r\n      event.reset();\r\n    }\r\n  }\r\n\r\n  onTagChange(event: TagComponent) {\r\n    if (!this.isDuplicate(event.name) && this.beforeAction({request:\"change\", item: event.originalName, to: event.name})) {\r\n      const index = this._tags.indexOf(event.originalName);\r\n      \r\n      this._tags[index] = event.name;\r\n      event.init();\r\n      this.notifyChange();\r\n    } else {\r\n      event.reset();\r\n    }\r\n  }\r\n\r\n  onTagDrop(event) {\r\n    const sind = this._tags.indexOf(event.source);\r\n    const dind = this._tags.indexOf(event.destination);\r\n\r\n    if (this.dragpolicy === DragDropPolicy.appendOnDrop) {\r\n      const i = this._selectedindex.indexOf(sind);\r\n      const name = event.destination + \" \" + event.source;\r\n      if (!this.maxtaglength ||  (this.maxtaglength && name.length <= this.maxtaglength)) {\r\n        if (this.beforeAction({request:\"drop\", action: \"append\", source: event.source, destination: event.destination})) {\r\n          this._tags[dind] = name;\r\n          this._tags.splice(sind,1);\r\n          this._selectedindex.splice(i,1);\r\n          this.notifyChange();\r\n        }\r\n      }\r\n    } else if (this.dragpolicy === DragDropPolicy.prependOnDrop) {\r\n      const i = this._selectedindex.indexOf(sind);\r\n      const name = event.source + \" \" + event.destination;\r\n      if (!this.maxtaglength ||  (this.maxtaglength && name.length <= this.maxtaglength)) {\r\n        if (this.beforeAction({request:\"drop\", action: \"prepend\", source: event.source, destination: event.destination})) {\r\n          this._tags[dind] = name;\r\n          this._tags.splice(sind,1);\r\n          this._selectedindex.splice(i,1);\r\n          this.notifyChange();\r\n        }\r\n      }\r\n    } if (this.dragpolicy === DragDropPolicy.swapOnDrop) {\r\n      if (this.beforeAction({request:\"drop\", action: \"swap\", source: event.source, destination: event.destination})) {\r\n        this._tags[sind] = this._tags.splice(dind, 1, this._tags[sind])[0];\r\n        this.notifyChange();\r\n      }\r\n    } \r\n  }\r\n  onTagSelect(event: TagComponent) {\r\n    if (this.selectionpolicy !== Selectionpolicy.disabled) {\r\n      this.onTagFocus(event);\r\n      if (this.beforeAction({request:\"select\", item: event.name})) {\r\n        if (this.selectionpolicy === Selectionpolicy.singleSelect) {\r\n          const list = this.el.nativeElement.childNodes;\r\n          for(let i=0; i < list.length; i++){\r\n            // 3 is text and 8 is comment\r\n            if (list[i].nodeType !== 3 && list[i].nodeType !== 8) {\r\n              this.renderer.setElementClass(list[i], \"selected\", false)\r\n            }\r\n          }\r\n          const index = this._tags.indexOf(event.name);\r\n          if (index >= 0) {\r\n            const i = this._selectedindex.indexOf(index);\r\n  \r\n            if (i < 0) {\r\n              this.renderer.setElementClass(event.el.nativeElement, \"selected\", true);\r\n              this._selectedindex = [index];\r\n            } else {\r\n              this.renderer.setElementClass(event.el.nativeElement, \"selected\", false)\r\n              this._selectedindex = [];\r\n            }\r\n            this.notifySelection();\r\n          }\r\n        } else {\r\n          const index = this._tags.indexOf(event.name);\r\n  \r\n          if (index >= 0) {\r\n            const i = this._selectedindex.indexOf(index);\r\n  \r\n            if (i < 0) {\r\n              this.renderer.setElementClass(event.el.nativeElement, \"selected\", true);\r\n              this._selectedindex.push(index);\r\n            } else {\r\n              this.renderer.setElementClass(event.el.nativeElement, \"selected\", false)\r\n              this._selectedindex.splice(i,1);\r\n            }\r\n            this.notifySelection();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  onTagFocus(event: TagComponent) {\r\n    if (this.selectionpolicy !== Selectionpolicy.disabled) {\r\n      const list = this.el.nativeElement.childNodes;\r\n      for(let i=0; i < list.length; i++){\r\n        // 3 is text and 8 is comment\r\n        if (list[i].nodeType !== 3 && list[i].nodeType !== 8) {\r\n          this.renderer.setElementClass(list[i], \"focused\", false)\r\n        }\r\n      }\r\n      const index = this._tags.indexOf(event.name);\r\n      if (index >= 0) {\r\n        this.renderer.setElementClass(event.el.nativeElement, \"focused\", true);\r\n      }\r\n    }\r\n  }\r\n}\r\n"
  ],
  "names": [
    "CommonModule",
    "HostListener",
    "ViewChild",
    "Input",
    "Output",
    "Renderer",
    "ElementRef",
    "Component",
    "EventEmitter"
  ],
  "mappings": "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"
}
