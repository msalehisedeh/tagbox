{
  "version": 3,
  "file": "tagbox.umd.min.js",
  "sources": [
    "ng://tagbox/out/src/app/tagbox/components/tagbox.component.ts",
    "ng://tagbox/out/src/app/tagbox/components/tag.transfer.ts",
    "ng://tagbox/out/src/app/tagbox/components/tag.component.ts",
    "ng://tagbox/out/src/app/tagbox/tagbox.module.ts"
  ],
  "sourcesContent": [
    "/*\r\n * Comparision Tool will layout two comparision trees side by side and feed them an internal object\r\n * heirarchy created for internal use from JSON objects given to this component.\r\n */\r\nimport {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  OnInit,\r\n  OnChanges,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  Renderer\r\n} from '@angular/core';\r\n\r\nimport {\r\n  DragDropPolicy,\r\n  Selectionpolicy,\r\n  EditPolicy\r\n} from '../interfaces/tagbox.interfaces';\r\n\r\nimport { TagComponent } from './tag.component';\r\n\r\n@Component({\r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'tagbox',\r\n  template: `\r\n<tag theme\r\n    *ngFor=\"let t of _tags; let i=index\"\r\n    tabindex=\"0\"\r\n    [class]=\"itemSelectionClass(i)\"\r\n    [name]=\"t\"\r\n    [parent]=\"this\"\r\n    [removable]=\"isRemovable()\"\r\n    [maxlength]=\"maxtaglength\"\r\n    [format]=\"format\"\r\n    [autocomplete]=\"autocomplete\"\r\n    [attr.role]=\"'listitem'\"\r\n    [selectionpolicy]=\"selectionpolicy\"\r\n    [editpolicy]=\"editpolicy\" \r\n    [dragpolicy]=\"dragpolicy\"\r\n    (ondrop)=\"onTagDrop($event)\"\r\n    (onchange)=\"onTagChange($event)\"\r\n    (onadd)=\"onTagAdd($event)\"\r\n    (onremove)=\"onTagRemove($event)\"\r\n    (onselect)=\"onTagSelect($event)\"\r\n    (onfocus)=\"onTagFocus($event)\">\r\n</tag><tag theme\r\n    placeholder\r\n    tabindex=\"0\"\r\n    name=\"\"\r\n    [parent]=\"this\"\r\n    [class]=\"itemSelectionClass(-1)\"\r\n    [maxlength]=\"maxtaglength\"\r\n    [placeholder]=\"placeholder\"\r\n    [format]=\"format\"\r\n    [autocomplete]=\"autocomplete\"\r\n    [attr.role]=\"'listitem'\"\r\n    [selectionpolicy]=\"selectionpolicy\"\r\n    [editpolicy]=\"editpolicy\" \r\n    [dragpolicy]=\"dragpolicy\"\r\n    (ondrop)=\"onTagDrop($event)\"\r\n    (onchange)=\"onTagChange($event)\"\r\n    (onadd)=\"onTagAdd($event)\"\r\n    (onremove)=\"onTagRemove($event)\"\r\n    (onfocus)=\"onTagFocus($event)\"></tag>\r\n`,\r\n  styles: [`:host{\n  background-color:#fff;\n  border:1px solid #ced4da;\n  -webkit-box-sizing:border-box;\n  box-sizing:border-box;\n  display:inline-block;\n  min-height:50px;\n  padding:5px;\n  width:100%;\n  border-radius:5px;\n  margin-bottom:5px; }\n  :host.alert{\n    background-color:#ff9f9b;\n    border-color:#880500; }\n\n:host:focus{\n  border-color:#0ba; }\n\n:host:hover{\n  background-color:#ddd; }\n`],\r\n})\r\nexport class TagBoxComponent implements OnInit, OnChanges {\r\n\r\n  _tags: string[] = [];\r\n  _selectedindex: number[] = [];\r\n  \r\n  @Output(\"onchange\")\r\n  onchange= new EventEmitter()\r\n\r\n  @Output(\"onerror\")\r\n  onerror= new EventEmitter()\r\n\r\n  @Output(\"onselect\")\r\n  onselect= new EventEmitter()\r\n\r\n  @Input(\"beforeAction\")\r\n  beforeAction = (event) => true;\r\n\r\n  @Input(\"id\")\r\n  id: string;\r\n\r\n  @Input(\"placeholder\")\r\n  placeholder: string = \"Add Tag\";\r\n  \r\n  @Input(\"maxboxlength\")\r\n  maxboxlength: number;\r\n\r\n  @Input(\"maxtaglength\")\r\n  maxtaglength: number;\r\n\r\n  @Input(\"maxtags\")\r\n  maxtags: number;\r\n\r\n  @Input(\"mintags\")\r\n  mintags: number;\r\n\r\n  @Input(\"formController\")\r\n  formController: HTMLElement;\r\n\r\n  @Input(\"tags\")\r\n  tags: any;\r\n\r\n  @Input(\"selectedindex\")\r\n  selectedindex: any;\r\n\r\n  @Input(\"delineateby\")\r\n  delineateby: string;\r\n\r\n  @Input(\"format\")\r\n  format: string;\r\n\r\n  @Input(\"autocomplete\")\r\n  autocomplete: string[];\r\n\r\n  @Input(\"selectionpolicy\")\r\n  selectionpolicy: Selectionpolicy;\r\n\r\n  @Input(\"editpolicy\")\r\n  editpolicy: EditPolicy;\r\n\r\n  @Input(\"dragpolicy\")\r\n  dragpolicy: DragDropPolicy;\r\n\r\n\r\n  constructor(private renderer: Renderer, private el: ElementRef) {\r\n\t  \r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.selectedindex && \r\n        (this.selectedindex instanceof String) && \r\n        (this.tags && !(this.tags instanceof String))) {\r\n      const x: string = String(this.selectedindex);\r\n      const list = x.split(\",\");\r\n      list.map((t) => {\r\n        this._selectedindex.push(parseInt(t));\r\n      });\r\n    } else {\r\n      this._selectedindex = this.selectedindex ? this.selectedindex : [];\r\n    }\r\n\r\n    if (this.tags && !(this.tags instanceof Array)) {\r\n      const x: string = String(this.tags);\r\n      this._tags = x.split(this.delineateby ? this.delineateby : \",\");\r\n    } else {\r\n      this._tags = this.tags ? this.tags : [];\r\n    }\r\n    this.renderer.setElementAttribute(this.el.nativeElement,\"role\",\"list\");\r\n  }\r\n\r\n  ngOnChanges(changes) {\r\n\r\n  }\r\n\r\n  itemSelectedAt(index) {\r\n    const canSelect = this.selectionpolicy !== Selectionpolicy.disabled;\r\n    return this._selectedindex.indexOf(index) < 0 ? false : canSelect;\r\n  }\r\n\r\n  itemSelectionClass(index) {\r\n    const selected = this.itemSelectedAt(index);\r\n    return selected ? \"selected\" : ((index < 0 || this.selectionpolicy === Selectionpolicy.disabled) ? \"left-padded\" : \"\");\r\n  }\r\n\r\n  isRemovable() {\r\n    let canRemove = (this.editpolicy === EditPolicy.addAndRemove);\r\n\r\n    canRemove = canRemove || (this.editpolicy === EditPolicy.removeOnly);\r\n\r\n    canRemove = canRemove && (!this.mintags || (this._tags.length > this.mintags));\r\n\r\n    if (!canRemove) {\r\n      this.onerror.emit(\"Unable to remove tag. Operation is not allowed.\");\r\n    }\r\n    return  canRemove;\r\n  }\r\n\r\n  private isDuplicate(name) {\r\n    const flag = this._tags.indexOf(name) < 0 ? false : true;\r\n    if (flag) {\r\n      this.onerror.emit(\"Unable to perform operation. Resulting duplicate tags is not allowed.\");\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  private allowedToaddItem(name) {\r\n    let canAdd = (this.editpolicy === EditPolicy.addAndRemove);\r\n\r\n    canAdd = canAdd || (this.editpolicy === EditPolicy.addOnly);\r\n\r\n    canAdd = canAdd && (!this.maxtags || (this._tags.length < this.maxtags));\r\n\r\n    canAdd = canAdd && !this.isDuplicate(name);\r\n\r\n    if (canAdd && this.maxtaglength) {\r\n      const x = this._tags.join( this.delineateby ? this.delineateby : \",\");\r\n      if (x.length+name.length+1 >= this.maxboxlength) {\r\n        canAdd = false;\r\n        this.onerror.emit(\"Unable to add tag. Resulting content will exceed maxtaglength.\");\r\n      }\r\n    }    \r\n    return  canAdd;\r\n  }\r\n\r\n  private notifyChange() {\r\n    this.tags = (this.tags instanceof Array) ? this._tags : this._tags.join( this.delineateby ? this.delineateby : \",\");\r\n    this.selectedindex = !(this.selectedindex instanceof Array) ? \r\n                          this._selectedindex : \r\n                          (this._selectedindex.length ? this._selectedindex.join(\",\") : \"\");\r\n    this.onchange.emit({\r\n      id: this.id,\r\n      tags: this.tags,\r\n      selecedIndex: this.selectedindex,\r\n      formController: this.formController\r\n    });\r\n  }\r\n  private notifySelection() {\r\n    this.selectedindex = !(this.selectedindex instanceof Array) ? \r\n                        this._selectedindex : \r\n                        (this._selectedindex.length ? this._selectedindex.join(\",\") : \"\");\r\n    this.onselect.emit({\r\n      id: this.id,\r\n      selecedIndex: this.selectedindex,\r\n      formController: this.formController\r\n    });\r\n  }\r\n  private createDropRequest(action, source, destination) {\r\n    return {\r\n      request: \"drop\",\r\n      action: action,\r\n      source: {\r\n        id: source.parent.id,\r\n        name: source.name\r\n      },\r\n      destination: {\r\n        id: destination.parent.id,\r\n        name: destination.name\r\n      }\r\n    }\r\n  }\r\n  private prependTagAt(index, source, destination) {\r\n    let result = false;\r\n    const newName = source.name  + \" \" + this._tags[index];\r\n    if (!this.maxtaglength ||  (this.maxtaglength && source.name.length <= this.maxtaglength)) {\r\n      if (this.beforeAction(this.createDropRequest(\"prepend\", source, destination))) {\r\n        this._tags[index] = newName;\r\n        result = true;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  private appendTagAt(index, source, destination) {\r\n    let result = false;\r\n    const newName = this._tags[index] + \" \" + source.name;\r\n    if (!this.maxtaglength ||  (this.maxtaglength && source.name.length <= this.maxtaglength)) {\r\n      if (this.beforeAction(this.createDropRequest(\"append\", source, destination))) {\r\n        this._tags[index] = newName;\r\n        result = true;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  removeTagWithName(name) {\r\n    if (this.isRemovable() && this.beforeAction({request:\"remove\", item: name})) {\r\n      const index = this._tags.indexOf(name);\r\n      const i = this._selectedindex.indexOf(index);\r\n\r\n      this._tags.splice(index,1);\r\n      if (i >= 0) {\r\n        this._selectedindex.splice(i,1);\r\n        this.notifyChange();\r\n      }\r\n    }\r\n  }\r\n  addTagWithName(name) {\r\n    let index = this._tags.indexOf(name);\r\n    const i = this._selectedindex.indexOf(index);\r\n    \r\n    if (index < 0  && \r\n        name.length && \r\n        this.allowedToaddItem(name) && \r\n        this.beforeAction({request:\"add\", item: name})) {\r\n      this._tags.push(name);\r\n      this.notifyChange();\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  onTagRemove(event: TagComponent) {\r\n    this.removeTagWithName(event.name);\r\n  }\r\n\r\n  onTagAdd(event: TagComponent) {\r\n    if (this.addTagWithName(event.name)) {\r\n      event.name = \"\";\r\n      event.click(null);\r\n    } else {\r\n      event.reset();\r\n    }\r\n  }\r\n\r\n  onTagChange(event: TagComponent) {\r\n    if (!this.isDuplicate(event.name) && this.beforeAction({request:\"change\", item: event.originalName, to: event.name})) {\r\n      const index = this._tags.indexOf(event.originalName);\r\n      \r\n      this._tags[index] = event.name;\r\n      event.init();\r\n      this.notifyChange();\r\n    } else {\r\n      event.reset();\r\n    }\r\n  }\r\n\r\n  onTagDrop(event) {\r\n    const sind = this._tags.indexOf(event.source.name);\r\n    const dind = this._tags.indexOf(event.destination.name);\r\n\r\n    if (this.dragpolicy === DragDropPolicy.appendOnDrop) {\r\n      if (event.source.parent.id === event.destination.parent.id) {\r\n        if (this.appendTagAt(dind, event.source, event.destination)) {\r\n          const i = this._selectedindex.indexOf(sind);\r\n          this._tags.splice(sind,1);\r\n          this._selectedindex.splice(i,1);\r\n          this.notifyChange();\r\n        }\r\n      } else {\r\n        if (this.appendTagAt(dind, event.source, event.destination)) {\r\n          this.notifyChange();\r\n          event.source.parent.removeTagWithName(event.source.name);\r\n        }\r\n      }\r\n    } else if (this.dragpolicy === DragDropPolicy.prependOnDrop) {\r\n      if (event.source.parent.id === event.destination.parent.id) {\r\n        if (this.prependTagAt(dind, event.source, event.destination)) {\r\n          const i = this._selectedindex.indexOf(sind);\r\n          this._tags.splice(sind,1);\r\n          this._selectedindex.splice(i,1);\r\n          this.notifyChange();\r\n        }\r\n      } else {\r\n        if (this.prependTagAt(dind, event.source, event.destination)) {\r\n          this.notifyChange();\r\n          event.source.parent.removeTagWithName(event.source.name);\r\n        }\r\n      }\r\n    } if (this.dragpolicy === DragDropPolicy.swapOnDrop) {\r\n      if (this.beforeAction(this.createDropRequest(\"swap\", event.source, event.destination))) {\r\n        if (event.source.parent.id === event.destination.parent.id) {\r\n          this._tags[sind] = this._tags.splice(dind, 1, this._tags[sind])[0];\r\n          this.notifyChange();\r\n        } else {\r\n          if (this.addTagWithName(event.source.name)) {\r\n            this.removeTagWithName(event.destination.name);\r\n            event.source.parent.removeTagWithName(event.source.name);\r\n          }\r\n        }\r\n      }\r\n    } \r\n  }\r\n  onTagSelect(event: TagComponent) {\r\n    if (this.selectionpolicy !== Selectionpolicy.disabled) {\r\n      this.onTagFocus(event);\r\n      if (this.beforeAction({request:\"select\", item: event.name})) {\r\n        if (this.selectionpolicy === Selectionpolicy.singleSelect) {\r\n          const list = this.el.nativeElement.childNodes;\r\n          for(let i=0; i < list.length; i++){\r\n            // 3 is text and 8 is comment\r\n            if (list[i].nodeType !== 3 && list[i].nodeType !== 8) {\r\n              this.renderer.setElementClass(list[i], \"selected\", false)\r\n            }\r\n          }\r\n          const index = this._tags.indexOf(event.name);\r\n          if (index >= 0) {\r\n            const i = this._selectedindex.indexOf(index);\r\n  \r\n            if (i < 0) {\r\n              this.renderer.setElementClass(event.el.nativeElement, \"selected\", true);\r\n              this._selectedindex = [index];\r\n            } else {\r\n              this.renderer.setElementClass(event.el.nativeElement, \"selected\", false)\r\n              this._selectedindex = [];\r\n            }\r\n            this.notifySelection();\r\n          }\r\n        } else {\r\n          const index = this._tags.indexOf(event.name);\r\n  \r\n          if (index >= 0) {\r\n            const i = this._selectedindex.indexOf(index);\r\n  \r\n            if (i < 0) {\r\n              this.renderer.setElementClass(event.el.nativeElement, \"selected\", true);\r\n              this._selectedindex.push(index);\r\n            } else {\r\n              this.renderer.setElementClass(event.el.nativeElement, \"selected\", false)\r\n              this._selectedindex.splice(i,1);\r\n            }\r\n            this.notifySelection();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  onTagFocus(event: TagComponent) {\r\n    if (this.selectionpolicy !== Selectionpolicy.disabled) {\r\n      const list = this.el.nativeElement.childNodes;\r\n      for(let i=0; i < list.length; i++){\r\n        // 3 is text and 8 is comment\r\n        if (list[i].nodeType !== 3 && list[i].nodeType !== 8) {\r\n          this.renderer.setElementClass(list[i], \"focused\", false)\r\n        }\r\n      }\r\n      const index = this._tags.indexOf(event.name);\r\n      if (index >= 0) {\r\n        this.renderer.setElementClass(event.el.nativeElement, \"focused\", true);\r\n      }\r\n    }\r\n  }\r\n}\r\n",
    "import { Injectable, Inject  } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class TagTransfer {\r\n    \r\n    private data: any = {};\r\n\r\n    constructor() {}\r\n\r\n    setData(name, value){\r\n        this.data[name] = value;\r\n    }\r\n\r\n    getData(name) {\r\n        return this.data[name];\r\n    }\r\n            \r\n}",
    "/*\r\n * A comparision tree will layout each attribute of a json deep through its heirarchy with given visual queues\r\n * that represents a deletion, adition, or change of attribute from the other tree. The status of each node is \r\n * evaluated by the parent comparision tool.\r\n */\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  HostListener,\r\n  ElementRef,\r\n  Renderer,\r\n  ViewChild,\r\n  EventEmitter\r\n} from '@angular/core';\r\n\r\nimport { InToPipe } from 'into-pipes';\r\n\r\nimport {\r\n  DragDropPolicy,\r\n  Selectionpolicy,\r\n  EditPolicy\r\n} from '../interfaces/tagbox.interfaces';\r\n\r\nimport { TagTransfer } from './tag.transfer';\r\n\r\n@Component({\r\n  selector: 'tag',\r\n  template: `\r\n<span #selector\r\n    *ngIf=\"!editMode && removable && isSelectable()\" \r\n    tabindex=\"0\" \r\n    class=\"selection fa\"\r\n    (click)=\"select()\"></span>\r\n<input \r\n    *ngIf=\"editMode\" \r\n    class=\"editor\" \r\n    (blur)=\"tabout($event)\"\r\n    (keyup)=\"edit($event)\" \r\n    [value]=\"name\"\r\n    [attr.maxlength]=\"maxlength\"\r\n    [attr.placeholder]=\"placeholder\" #editor/>\r\n<div class=\"autocomplete off\" *ngIf=\"editMode && autocomplete\" #filler>\r\n  <ul>\r\n      <li *ngFor=\"let x of fillerList; let i = index\" \r\n        (click)=\"selectedFiller = i\" \r\n        [class.selected]=\"selectedFiller === i\"\r\n        [textContent]=\"x\"></li>\r\n  </ul>\r\n</div>\r\n<span \r\n    *ngIf=\"!editMode\" \r\n    class=\"holder\" \r\n    [innerHTML]=\"placeholder ? placeholder : formattedName()\"></span>\r\n<span \r\n    *ngIf=\"!editMode && removable\" \r\n    tabindex=\"0\" \r\n    class=\"remove fa fa-times\" \r\n    (click)=\"remove()\"></span>\r\n<span \r\n    *ngIf=\"!removable\" \r\n    class=\"placeholder fa fa-plus-circle\"></span>`,\r\n  styles: [`:host{\n  cursor:pointer;\n  color:#fdfdfd;\n  margin:4px 2px;\n  display:inline-block;\n  background-color:#1F84AB;\n  border:1px solid #015E85;\n  border-radius:8px 20px 20px 8px;\n  -webkit-box-sizing:border-box;\n          box-sizing:border-box;\n  padding:3px 0;\n  position:relative; }\n  :host ::ng-deep img{\n    height:25px; }\n  :host.left-padded{\n    padding-left:8px; }\n  :host.drag-over{\n    background-color:#add8e6 !important;\n    cursor:move; }\n  :host[placeholder]{\n    background-color:transparent;\n    color:#000;\n    border:0; }\n    :host[placeholder]:hover{\n      background-color:#eee !important; }\n    :host[placeholder] .editor{\n      color:#000; }\n  :host:hover{\n    background-color:#027912 !important;\n    border-color:#024b0b !important; }\n  :host.focused{\n    background-color:#027912 !important;\n    border-color:#024b0b !important; }\n  :host.selected:hover{\n    background-color:#D6534E; }\n  :host.selected{\n    background-color:#D6534E; }\n    :host.selected .selection.fa:before{\n      content:\"\\\\f00c\" !important; }\n  :host .selection{\n    background-color:transparent;\n    float:left;\n    margin-right:3px;\n    padding:0;\n    width:10px;\n    height:10px;\n    font-size:0.8rem;\n    padding:5px 3px; }\n    :host .selection.fa:before{\n      content:\"\\\\f013\"; }\n  :host .editor{\n    background-color:transparent;\n    overflow:unset;\n    max-width:inherit;\n    width:inherit;\n    color:#fff;\n    border:none; }\n  :host .placeholder{\n    color:#888585;\n    float:right;\n    font-size:1rem;\n    height:20px;\n    line-height:20px;\n    margin-left:5px;\n    text-align:center;\n    width:20px; }\n  :host .remove{\n    float:right;\n    font-size:0.7rem;\n    height:20px;\n    width:20px;\n    color:#fff;\n    text-align:center;\n    margin-left:5px;\n    line-height:20px;\n    font-weight:bolder; }\n  :host .holder{\n    pointer-events:none;\n    -webkit-user-select:none;\n    -moz-user-select:none;\n    -ms-user-select:none;\n    user-select:none; }\n  :host .autocomplete{\n    position:absolute;\n    top:26px;\n    z-index:5; }\n    :host .autocomplete.off{\n      display:none; }\n    :host .autocomplete ul{\n      border:1px solid #024b0b;\n      border-top:0;\n      list-style:none;\n      background-color:#027912;\n      list-style-position:inside;\n      margin:0;\n      max-height:150px;\n      overflow-y:auto;\n      padding:0; }\n      :host .autocomplete ul li{\n        color:#fdfdfd;\n        padding:5px;\n        white-space:nowrap; }\n        :host .autocomplete ul li.selected{\n          background-color:#D6534E; }\n        :host .autocomplete ul li:hover{\n          background-color:#0446a8;\n          color:#fff; }\n`],\r\n})\r\nexport class TagComponent implements OnInit {\r\n  editMode: boolean;\r\n\r\n  originalName: string;\r\n  selectedFiller = -1;\r\n  fillerList: string[];\r\n\r\n  @Output(\"onfocus\")\r\n  onfocus= new EventEmitter()\r\n\r\n  @Output(\"onchange\")\r\n  onchange= new EventEmitter()\r\n\r\n  @Output(\"onselect\")\r\n  onselect= new EventEmitter()\r\n\r\n  @Output(\"onremove\")\r\n  onremove= new EventEmitter()\r\n\r\n  @Output(\"onadd\")\r\n  onadd= new EventEmitter()\r\n\r\n  @Output(\"ondrop\")\r\n  ondrop= new EventEmitter()\r\n\r\n  @Input(\"format\")\r\n  format: string;\r\n\r\n  @Input(\"removable\")\r\n  removable: boolean;\r\n\r\n  @Input(\"maxlength\")\r\n  maxlength: string;\r\n\r\n  @Input(\"name\")\r\n  name: string;\r\n\r\n  @Input(\"placeholder\")\r\n  placeholder: boolean;\r\n\r\n  @Input(\"parent\")\r\n  parent: any;\r\n\r\n  @Input(\"autocomplete\")\r\n  autocomplete: string[];\r\n\r\n  @Input(\"selectionpolicy\")\r\n  selectionpolicy: Selectionpolicy;\r\n\r\n  @Input(\"editpolicy\")\r\n  editpolicy: EditPolicy;\r\n\r\n  @Input(\"dragpolicy\")\r\n  dragpolicy: DragDropPolicy;\r\n\r\n  @ViewChild(\"editor\")\r\n  editor;\r\n\r\n  @ViewChild(\"selector\")\r\n  selector;\r\n\r\n  @ViewChild(\"filler\")\r\n  filler;\r\n\r\n  constructor(\r\n    private dataTransfer: TagTransfer,\r\n    private into: InToPipe,\r\n    public el: ElementRef, \r\n    private renderer: Renderer\r\n  ){\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.init();\r\n    this.el.nativeElement.draggable = (this.dragpolicy !== DragDropPolicy.disabled);\r\n  }\r\n\r\n  @HostListener('dragstart', ['$event']) \r\n  dragStart(event) {\r\n      event.stopPropagation();\t\r\n      if (this.allowDrag()) {\r\n        event.dataTransfer.setData(\"source\",this.name); // this is needed to get the darg/drop going..\r\n        this.dataTransfer.setData(\"source\",this); // this is needed because event data transfer takes string not bject\r\n      }\r\n  }\r\n  @HostListener('drag', ['$event']) \r\n  drag(event) {}\r\n  \r\n  @HostListener('dragend', ['$event']) \r\n  dragEnd(event) {\r\n      event.stopPropagation();\t\r\n\r\n      this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n  }\r\n  @HostListener('drop', ['$event'])\r\n  drop(event) {\r\n    event.preventDefault();\r\n    this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n    this.ondrop.emit({\r\n      source: this.dataTransfer.getData(\"source\"),\r\n      destination: this\r\n    })\r\n  }\r\n  \r\n  @HostListener('dragenter', ['$event']) \r\n  dragEnter(event) {\r\n      event.preventDefault();\r\n      if (this.allowDrop(event)) {\r\n          this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", true);\r\n      } else {\r\n          this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n      }\r\n  }\r\n  \r\n  @HostListener('dragleave', ['$event']) \r\n  dragLeave(event) {\r\n      event.preventDefault();\r\n              \r\n      this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n  }\r\n  \r\n  @HostListener('dragover', ['$event']) \r\n  dragOver(event) {\r\n      if (this.allowDrop(event)) {\r\n          event.preventDefault();\r\n          this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", true);\r\n      } else {\r\n          this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n      }\r\n  }\r\n  \r\n  allowDrop(event): boolean {\r\n      const source = this.dataTransfer.getData(\"source\");\r\n\r\n      return (source && source.name != this.name) && this.name && this.name.length > 0;\r\n  }\r\n\r\n  allowDrag() : boolean {\r\n    return (this.dragpolicy !== DragDropPolicy.disabled) && this.name && this.name.length > 0;\r\n  }\r\n\r\n  @HostListener('keyup', ['$event']) \r\n  keyup(event) {\r\n    if (event.target === this.el.nativeElement ||\r\n       (this.editor && event.target === this.editor.nativeElement)) {\r\n      const code = event.which;\r\n      if (code === 13) { // cariage return\r\n        this.click(event)\r\n      }else if (code === 9 && this.editMode) { // tab out\r\n        setTimeout(()=>{\r\n          this.editMode = false;\r\n          if (this.originalName.length && this.originalName !== this.name) {\r\n            this.onchange.emit(this);\r\n          } else {\r\n            this.onadd.emit(this);\r\n          }\r\n        }, 66);\r\n      }else if (code === 38) { // arrow up\r\n        if (this.filler) {\r\n          if (this.selectedFiller >= 0) {\r\n            this.selectedFiller--;\r\n          } else {\r\n            this.selectedFiller = this.fillerList.length - 1;\r\n          }         \r\n        }\r\n      } else if (code === 40) { // arrow down\r\n        if (this.filler) {\r\n          if (this.selectedFiller < (this.fillerList.length - 1)) {\r\n            this.selectedFiller++;\r\n          } else {\r\n            this.selectedFiller = -1;\r\n          }   \r\n        }\r\n      }\r\n    } else if (this.selector && event.target === this.selector.nativeElement) {\r\n      const code = event.which;\r\n      if (code === 13) { // cariage return\r\n        if (this.isSelectable()) {\r\n          this.onselect.emit(this)\r\n        }\r\n      }\r\n    } else {\r\n      const code = event.which;\r\n      if (code === 13) { // cariage return\r\n        this.remove();\r\n      }      \r\n    }\r\n  }\r\n\r\n  @HostListener('click', ['$event']) \r\n  click(event) {\r\n    if (this.selector && event.target === this.selector.nativeElement) {\r\n      if (this.isSelectable()) {\r\n        this.onselect.emit(this)\r\n      }\r\n    } else if (this.isEditable()) {\r\n      this.editMode = !this.editMode;\r\n      if (this.editMode) {\r\n        setTimeout(()=>{\r\n          if (this.filler) {\r\n            this.selectedFiller = -1;\r\n            this.updateFillerList(this.name);\r\n          }\r\n          if (this.editor) {\r\n            this.editor.nativeElement.focus();\r\n            if (this.filler) {\r\n              this.renderer.setElementClass(this.filler.nativeElement, \"off\", false);\r\n            }\r\n          }\r\n        },66);\r\n      } else if (this.selectedFiller >= 0) {\r\n        this.name = this.fillerList[this.selectedFiller];\r\n      }\r\n      if (this.originalName.length) {\r\n        if (this.originalName !== this.name) {\r\n          this.onchange.emit(this);\r\n        }\r\n        if (!this.editMode) {\r\n          setTimeout(()=>{this.el.nativeElement.focus() },66);\r\n        }\r\n      } else {\r\n        this.onadd.emit(this);\r\n      }\r\n    }\r\n  }\r\n\r\n  @HostListener('focus', ['$event']) \r\n  focus(event) {\r\n    if (this.isSelectable()) {\r\n      this.onfocus.emit(this)\r\n    }\r\n  }\r\n\r\n  isRemovable() {\r\n    let canRemove = (this.editpolicy === EditPolicy.addAndRemove);\r\n\r\n    canRemove = canRemove || (this.editpolicy === EditPolicy.removeOnly);\r\n    \r\n    return  canRemove;\r\n  }\r\n\r\n  isEditable() {\r\n    return  (this.editpolicy !== EditPolicy.viewOnly);\r\n  }\r\n\r\n  isDraggable() {\r\n    return  (this.dragpolicy !== DragDropPolicy.disabled);\r\n  }\r\n\r\n  isSelectable() {\r\n    return  (this.selectionpolicy !== Selectionpolicy.disabled);\r\n  }\r\n  select() {\r\n    \r\n  }\r\n\r\n  tabout(event) {\r\n    setTimeout(() => {\r\n      this.name = this.selectedFiller < 0 ? event.target.value : this.fillerList[this.selectedFiller];\r\n      this.editMode = false;\r\n      if (this.originalName.length && this.originalName !== this.name) {\r\n        this.onchange.emit(this);\r\n      } else {\r\n        this.onadd.emit(this);\r\n      }\r\n    }, 66)\r\n  }\r\n  edit(event) {\r\n    this.name = event.target.value;\r\n    this.updateFillerList(this.name);\r\n  }\r\n\r\n  updateFillerList(value) {\r\n    if (value && this.autocomplete instanceof Array){\r\n      if (value) {\r\n        this.fillerList = this.autocomplete.filter((item) => item.indexOf(value) >= 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  init() {\r\n    this.originalName = this.name;\r\n  }\r\n  reset() {\r\n    this.name = this.originalName;\r\n  }\r\n\r\n  remove() {\r\n    if (this.isRemovable()) {\r\n      this.onremove.emit(this);\r\n    }\r\n  }\r\n\r\n  formattedName() {\r\n    let result = this.name;\r\n    if (this.format) {\r\n      result = this.into.transform(this.name, this.format);\r\n    }\r\n    return result;\r\n  }\r\n\r\n}\r\n",
    "import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IntoPipeModule } from 'into-pipes';\r\n\r\nimport { TagComponent } from './components/tag.component';\r\nimport { TagBoxComponent } from './components/tagbox.component';\r\nimport { TagTransfer } from './components/tag.transfer';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IntoPipeModule\r\n  ],\r\n  declarations: [\r\n    TagBoxComponent,\r\n    TagComponent\r\n  ],\r\n  exports: [\r\n    TagBoxComponent\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  providers: [\r\n    TagTransfer\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class TagBoxModule {}\r\n"
  ],
  "names": [
    "TagBoxComponent",
    "renderer",
    "el",
    "this",
    "_tags",
    "_selectedindex",
    "onchange",
    "EventEmitter",
    "onerror",
    "onselect",
    "beforeAction",
    "event",
    "placeholder",
    "prototype",
    "ngOnInit",
    "_this",
    "selectedindex",
    "String",
    "tags",
    "x",
    "split",
    "map",
    "t",
    "push",
    "parseInt",
    "Array",
    "delineateby",
    "setElementAttribute",
    "nativeElement",
    "ngOnChanges",
    "changes",
    "itemSelectedAt",
    "index",
    "canSelect",
    "selectionpolicy",
    "Selectionpolicy",
    "disabled",
    "indexOf",
    "itemSelectionClass",
    "isRemovable",
    "canRemove",
    "editpolicy",
    "EditPolicy",
    "addAndRemove",
    "removeOnly",
    "mintags",
    "length",
    "emit",
    "isDuplicate",
    "name",
    "flag",
    "allowedToaddItem",
    "canAdd",
    "addOnly",
    "maxtags",
    "maxtaglength",
    "join",
    "maxboxlength",
    "notifyChange",
    "id",
    "selecedIndex",
    "formController",
    "notifySelection",
    "createDropRequest",
    "action",
    "source",
    "destination",
    "request",
    "parent",
    "prependTagAt",
    "result",
    "newName",
    "appendTagAt",
    "removeTagWithName",
    "item",
    "i",
    "splice",
    "addTagWithName",
    "onTagRemove",
    "onTagAdd",
    "click",
    "reset",
    "onTagChange",
    "originalName",
    "to",
    "init",
    "onTagDrop",
    "sind",
    "dind",
    "dragpolicy",
    "DragDropPolicy",
    "appendOnDrop",
    "prependOnDrop",
    "swapOnDrop",
    "onTagSelect",
    "onTagFocus",
    "singleSelect",
    "list",
    "childNodes",
    "nodeType",
    "setElementClass",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "styles",
    "Renderer",
    "ElementRef",
    "Output",
    "Input",
    "format",
    "autocomplete",
    "TagTransfer",
    "data",
    "setData",
    "value",
    "getData",
    "Injectable",
    "TagComponent",
    "dataTransfer",
    "into",
    "selectedFiller",
    "onfocus",
    "onremove",
    "onadd",
    "ondrop",
    "draggable",
    "dragStart",
    "stopPropagation",
    "allowDrag",
    "drag",
    "dragEnd",
    "drop",
    "preventDefault",
    "dragEnter",
    "allowDrop",
    "dragLeave",
    "dragOver",
    "keyup",
    "target",
    "editor",
    "code",
    "which",
    "editMode",
    "setTimeout",
    "filler",
    "fillerList",
    "isSelectable",
    "remove",
    "isEditable",
    "updateFillerList",
    "focus",
    "viewOnly",
    "isDraggable",
    "select",
    "tabout",
    "edit",
    "filter",
    "formattedName",
    "transform",
    "InToPipe",
    "removable",
    "maxlength",
    "ViewChild",
    "HostListener",
    "TagBoxModule",
    "NgModule",
    "imports",
    "CommonModule",
    "IntoPipeModule",
    "declarations",
    "exports",
    "entryComponents",
    "providers",
    "schemas",
    "CUSTOM_ELEMENTS_SCHEMA"
  ],
  "mappings": "m0BAIA,IAAAA,EAAA,WAqJE,SAAFA,EAAsBC,EAA4BC,GAA5BC,KAAtBF,SAAsBA,EAA4BE,KAAlDD,GAAkDA,EA7DlDC,KAAAC,SACAD,KAAAE,kBAGAF,KAAAG,SAAY,IAAIC,EAAAA,aAGhBJ,KAAAK,QAAW,IAAID,EAAAA,aAGfJ,KAAAM,SAAY,IAAIF,EAAAA,aAGhBJ,KAAAO,aAAiB,SAACC,GAAU,OAAA,GAM5BR,KAAAS,YAAwB,iBA8CtBZ,EAAFa,UAAAC,SAAE,WAAA,IAAFC,EAAAZ,KACQA,KAAKa,eACJb,KAAKa,yBAAyBC,QAC9Bd,KAAKe,QAAUf,KAAKe,gBAAgBD,SACjCE,EAAYF,OAAOd,KAAKa,gBACfI,MAAM,KAChBC,IAAI,SAACC,GACRP,EAAKV,eAAekB,KAAKC,SAASF,MAGpCnB,KAAKE,eAAiBF,KAAKa,cAAgBb,KAAKa,iBAGlD,IAAIb,KAAKe,MAAUf,KAAKe,gBAAgBO,MAItCtB,KAAKC,MAAQD,KAAKe,KAAOf,KAAKe,YAJgB,CAC9C,IAAMC,EAAYF,OAAOd,KAAKe,MAC9Bf,KAAKC,MAAQe,EAAEC,MAAMjB,KAAKuB,YAAcvB,KAAKuB,YAAc,KAI7DvB,KAAKF,SAAS0B,oBAAoBxB,KAAKD,GAAG0B,cAAc,OAAO,SAGjE5B,EAAFa,UAAAgB,YAAE,SAAYC,KAIZ9B,EAAFa,UAAAkB,eAAE,SAAeC,GACb,IAAMC,EAAY9B,KAAK+B,kBAAoBC,EAAgBC,SAC3D,QAAOjC,KAAKE,eAAegC,QAAQL,GAAS,IAAYC,GAG1DjC,EAAFa,UAAAyB,mBAAE,SAAmBN,GAEjB,OADiB7B,KAAK4B,eAAeC,GACnB,WAAeA,EAAQ,GAAK7B,KAAK+B,kBAAoBC,EAAgBC,SAAY,cAAgB,IAGrHpC,EAAFa,UAAA0B,YAAE,WACE,IAAIC,EAAarC,KAAKsC,aAAeC,EAAWC,aAShD,OALAH,GAFAA,EAAYA,GAAcrC,KAAKsC,aAAeC,EAAWE,eAE9BzC,KAAK0C,SAAY1C,KAAKC,MAAM0C,OAAS3C,KAAK0C,WAGnE1C,KAAKK,QAAQuC,KAAK,mDAEZP,GAGFxC,EAAVa,UAAAmC,YAAU,SAAYC,GAClB,IAAMC,IAAO/C,KAAKC,MAAMiC,QAAQY,GAAQ,GAIxC,OAHIC,GACF/C,KAAKK,QAAQuC,KAAK,yEAEbG,GAGDlD,EAAVa,UAAAsC,iBAAU,SAAiBF,GACvB,IAAIG,EAAUjD,KAAKsC,aAAeC,EAAWC,cAM7CS,GAFAA,GAFAA,EAASA,GAAWjD,KAAKsC,aAAeC,EAAWW,YAE9BlD,KAAKmD,SAAYnD,KAAKC,MAAM0C,OAAS3C,KAAKmD,YAE3CnD,KAAK6C,YAAYC,KAEvB9C,KAAKoD,eACPpD,KAAKC,MAAMoD,KAAMrD,KAAKuB,YAAcvB,KAAKuB,YAAc,KAC3DoB,OAAOG,EAAKH,OAAO,GAAK3C,KAAKsD,eACjCL,GAAS,EACTjD,KAAKK,QAAQuC,KAAK,oEAGtB,OAAQK,GAGFpD,EAAVa,UAAA6C,aAAU,WACNvD,KAAKe,KAAQf,KAAKe,gBAAgBO,MAAStB,KAAKC,MAAQD,KAAKC,MAAMoD,KAAMrD,KAAKuB,YAAcvB,KAAKuB,YAAc,KAC/GvB,KAAKa,cAAkBb,KAAKa,yBAAyBS,MAE9BtB,KAAKE,eAAeyC,OAAS3C,KAAKE,eAAemD,KAAK,KAAO,GAD9DrD,KAAKE,eAE3BF,KAAKG,SAASyC,MACZY,GAAIxD,KAAKwD,GACTzC,KAAMf,KAAKe,KACX0C,aAAczD,KAAKa,cACnB6C,eAAgB1D,KAAK0D,kBAGjB7D,EAAVa,UAAAiD,gBAAU,WACN3D,KAAKa,cAAkBb,KAAKa,yBAAyBS,MAEhCtB,KAAKE,eAAeyC,OAAS3C,KAAKE,eAAemD,KAAK,KAAO,GAD9DrD,KAAKE,eAEzBF,KAAKM,SAASsC,MACZY,GAAIxD,KAAKwD,GACTC,aAAczD,KAAKa,cACnB6C,eAAgB1D,KAAK0D,kBAGjB7D,EAAVa,UAAAkD,kBAAU,SAAkBC,EAAQC,EAAQC,GACxC,OACEC,QAAS,OACTH,OAAQA,EACRC,QACEN,GAAIM,EAAOG,OAAOT,GAClBV,KAAMgB,EAAOhB,MAEfiB,aACEP,GAAIO,EAAYE,OAAOT,GACvBV,KAAMiB,EAAYjB,QAIhBjD,EAAVa,UAAAwD,aAAU,SAAarC,EAAOiC,EAAQC,GAClC,IAAII,GAAS,EACPC,EAAUN,EAAOhB,KAAQ,IAAM9C,KAAKC,MAAM4B,GAOhD,QANK7B,KAAKoD,cAAkBpD,KAAKoD,cAAgBU,EAAOhB,KAAKH,QAAU3C,KAAKoD,eACtEpD,KAAKO,aAAaP,KAAK4D,kBAAkB,UAAWE,EAAQC,MAC9D/D,KAAKC,MAAM4B,GAASuC,EACpBD,GAAS,GAGNA,GAEDtE,EAAVa,UAAA2D,YAAU,SAAYxC,EAAOiC,EAAQC,GACjC,IAAII,GAAS,EACPC,EAAUpE,KAAKC,MAAM4B,GAAS,IAAMiC,EAAOhB,KAOjD,QANK9C,KAAKoD,cAAkBpD,KAAKoD,cAAgBU,EAAOhB,KAAKH,QAAU3C,KAAKoD,eACtEpD,KAAKO,aAAaP,KAAK4D,kBAAkB,SAAUE,EAAQC,MAC7D/D,KAAKC,MAAM4B,GAASuC,EACpBD,GAAS,GAGNA,GAETtE,EAAFa,UAAA4D,kBAAE,SAAkBxB,GAChB,GAAI9C,KAAKoC,eAAiBpC,KAAKO,cAAcyD,QAAQ,SAAUO,KAAMzB,IAAQ,CAC3E,IAAMjB,EAAQ7B,KAAKC,MAAMiC,QAAQY,GAC3B0B,EAAIxE,KAAKE,eAAegC,QAAQL,GAEtC7B,KAAKC,MAAMwE,OAAO5C,EAAM,GACf,GAAL2C,IACFxE,KAAKE,eAAeuE,OAAOD,EAAE,GAC7BxE,KAAKuD,kBAIX1D,EAAFa,UAAAgE,eAAE,SAAe5B,GACb,IAAIjB,EAAQ7B,KAAKC,MAAMiC,QAAQY,GACrB9C,KAAKE,eAAegC,QAAQL,GAEtC,SAAIA,EAAQ,GACRiB,EAAKH,QACL3C,KAAKgD,iBAAiBF,IACtB9C,KAAKO,cAAcyD,QAAQ,MAAOO,KAAMzB,OAC1C9C,KAAKC,MAAMmB,KAAK0B,GAChB9C,KAAKuD,gBACE,IAKX1D,EAAFa,UAAAiE,YAAE,SAAYnE,GACVR,KAAKsE,kBAAkB9D,EAAMsC,OAG/BjD,EAAFa,UAAAkE,SAAE,SAASpE,GACHR,KAAK0E,eAAelE,EAAMsC,OAC5BtC,EAAMsC,KAAO,GACbtC,EAAMqE,MAAM,OAEZrE,EAAMsE,SAIVjF,EAAFa,UAAAqE,YAAE,SAAYvE,GACV,IAAKR,KAAK6C,YAAYrC,EAAMsC,OAAS9C,KAAKO,cAAcyD,QAAQ,SAAUO,KAAM/D,EAAMwE,aAAcC,GAAIzE,EAAMsC,OAAQ,CACpH,IAAMjB,EAAQ7B,KAAKC,MAAMiC,QAAQ1B,EAAMwE,cAEvChF,KAAKC,MAAM4B,GAASrB,EAAMsC,KAC1BtC,EAAM0E,OACNlF,KAAKuD,oBAEL/C,EAAMsE,SAIVjF,EAAFa,UAAAyE,UAAE,SAAU3E,GACR,IAAM4E,EAAOpF,KAAKC,MAAMiC,QAAQ1B,EAAMsD,OAAOhB,MACvCuC,EAAOrF,KAAKC,MAAMiC,QAAQ1B,EAAMuD,YAAYjB,MAElD,GAAI9C,KAAKsF,aAAeC,EAAeC,aACrC,GAAIhF,EAAMsD,OAAOG,OAAOT,KAAOhD,EAAMuD,YAAYE,OAAOT,IACtD,GAAIxD,KAAKqE,YAAYgB,EAAM7E,EAAMsD,OAAQtD,EAAMuD,aAAc,CAC3D,IAAMS,EAAIxE,KAAKE,eAAegC,QAAQkD,GACtCpF,KAAKC,MAAMwE,OAAOW,EAAK,GACvBpF,KAAKE,eAAeuE,OAAOD,EAAE,GAC7BxE,KAAKuD,qBAGHvD,KAAKqE,YAAYgB,EAAM7E,EAAMsD,OAAQtD,EAAMuD,eAC7C/D,KAAKuD,eACL/C,EAAMsD,OAAOG,OAAOK,kBAAkB9D,EAAMsD,OAAOhB,YAGlD,GAAI9C,KAAKsF,aAAeC,EAAeE,cAC5C,GAAIjF,EAAMsD,OAAOG,OAAOT,KAAOhD,EAAMuD,YAAYE,OAAOT,IACtD,GAAIxD,KAAKkE,aAAamB,EAAM7E,EAAMsD,OAAQtD,EAAMuD,aAAc,CACtDS,EAAIxE,KAAKE,eAAegC,QAAQkD,GACtCpF,KAAKC,MAAMwE,OAAOW,EAAK,GACvBpF,KAAKE,eAAeuE,OAAOD,EAAE,GAC7BxE,KAAKuD,qBAGHvD,KAAKkE,aAAamB,EAAM7E,EAAMsD,OAAQtD,EAAMuD,eAC9C/D,KAAKuD,eACL/C,EAAMsD,OAAOG,OAAOK,kBAAkB9D,EAAMsD,OAAOhB,OAGnD9C,KAAKsF,aAAeC,EAAeG,YACnC1F,KAAKO,aAAaP,KAAK4D,kBAAkB,OAAQpD,EAAMsD,OAAQtD,EAAMuD,gBACnEvD,EAAMsD,OAAOG,OAAOT,KAAOhD,EAAMuD,YAAYE,OAAOT,IACtDxD,KAAKC,MAAMmF,GAAQpF,KAAKC,MAAMwE,OAAOY,EAAM,EAAGrF,KAAKC,MAAMmF,IAAO,GAChEpF,KAAKuD,gBAEDvD,KAAK0E,eAAelE,EAAMsD,OAAOhB,QACnC9C,KAAKsE,kBAAkB9D,EAAMuD,YAAYjB,MACzCtC,EAAMsD,OAAOG,OAAOK,kBAAkB9D,EAAMsD,OAAOhB,SAM7DjD,EAAFa,UAAAiF,YAAE,SAAYnF,GACV,GAAIR,KAAK+B,kBAAoBC,EAAgBC,WAC3CjC,KAAK4F,WAAWpF,GACZR,KAAKO,cAAcyD,QAAQ,SAAUO,KAAM/D,EAAMsC,QACnD,GAAI9C,KAAK+B,kBAAoBC,EAAgB6D,aAAc,CAEzD,IADA,IAAMC,EAAO9F,KAAKD,GAAG0B,cAAcsE,WAC3BvB,EAAE,EAAGA,EAAIsB,EAAKnD,OAAQ6B,IAEH,IAArBsB,EAAKtB,GAAGwB,UAAuC,IAArBF,EAAKtB,GAAGwB,UACpChG,KAAKF,SAASmG,gBAAgBH,EAAKtB,GAAI,YAAY,GAIvD,GAAa,IADP3C,EAAQ7B,KAAKC,MAAMiC,QAAQ1B,EAAMsC,QAE/B0B,EAAIxE,KAAKE,eAAegC,QAAQL,IAE9B,GACN7B,KAAKF,SAASmG,gBAAgBzF,EAAMT,GAAG0B,cAAe,YAAY,GAClEzB,KAAKE,gBAAkB2B,KAEvB7B,KAAKF,SAASmG,gBAAgBzF,EAAMT,GAAG0B,cAAe,YAAY,GAClEzB,KAAKE,mBAEPF,KAAK2D,sBAEF,CACL,IAAM9B,EAEN,GAAa,IAFPA,EAAQ7B,KAAKC,MAAMiC,QAAQ1B,EAAMsC,QAG/B0B,EAAIxE,KAAKE,eAAegC,QAAQL,IAE9B,GACN7B,KAAKF,SAASmG,gBAAgBzF,EAAMT,GAAG0B,cAAe,YAAY,GAClEzB,KAAKE,eAAekB,KAAKS,KAEzB7B,KAAKF,SAASmG,gBAAgBzF,EAAMT,GAAG0B,cAAe,YAAY,GAClEzB,KAAKE,eAAeuE,OAAOD,EAAE,IAE/BxE,KAAK2D,oBAMf9D,EAAFa,UAAAkF,WAAE,SAAWpF,GACT,GAAIR,KAAK+B,kBAAoBC,EAAgBC,SAAU,CAErD,IADA,IAAM6D,EAAO9F,KAAKD,GAAG0B,cAAcsE,WAC3BvB,EAAE,EAAGA,EAAIsB,EAAKnD,OAAQ6B,IAEH,IAArBsB,EAAKtB,GAAGwB,UAAuC,IAArBF,EAAKtB,GAAGwB,UACpChG,KAAKF,SAASmG,gBAAgBH,EAAKtB,GAAI,WAAW,GAIzC,GADCxE,KAAKC,MAAMiC,QAAQ1B,EAAMsC,OAErC9C,KAAKF,SAASmG,gBAAgBzF,EAAMT,GAAG0B,cAAe,WAAW,OAxbzE,kBAoBAyE,KAACC,EAAAA,UAADC,OAEEC,SAAU,SACVC,SAAU,0qCAyCVC,QAAS,6bAvDXL,KAAEM,EAAAA,WADFN,KAAEO,EAAAA,gCAmFFtG,WAAA+F,KAAGQ,EAAAA,OAAHN,MAAU,cAGV/F,UAAA6F,KAAGQ,EAAAA,OAAHN,MAAU,aAGV9F,WAAA4F,KAAGQ,EAAAA,OAAHN,MAAU,cAGV7F,eAAA2F,KAAGS,EAAAA,MAAHP,MAAS,kBAGT5C,KAAA0C,KAAGS,EAAAA,MAAHP,MAAS,QAGT3F,cAAAyF,KAAGS,EAAAA,MAAHP,MAAS,iBAGT9C,eAAA4C,KAAGS,EAAAA,MAAHP,MAAS,kBAGThD,eAAA8C,KAAGS,EAAAA,MAAHP,MAAS,kBAGTjD,UAAA+C,KAAGS,EAAAA,MAAHP,MAAS,aAGT1D,UAAAwD,KAAGS,EAAAA,MAAHP,MAAS,aAGT1C,iBAAAwC,KAAGS,EAAAA,MAAHP,MAAS,oBAGTrF,OAAAmF,KAAGS,EAAAA,MAAHP,MAAS,UAGTvF,gBAAAqF,KAAGS,EAAAA,MAAHP,MAAS,mBAGT7E,cAAA2E,KAAGS,EAAAA,MAAHP,MAAS,iBAGTQ,SAAAV,KAAGS,EAAAA,MAAHP,MAAS,YAGTS,eAAAX,KAAGS,EAAAA,MAAHP,MAAS,kBAGTrE,kBAAAmE,KAAGS,EAAAA,MAAHP,MAAS,qBAGT9D,aAAA4D,KAAGS,EAAAA,MAAHP,MAAS,gBAGTd,aAAAY,KAAGS,EAAAA,MAAHP,MAAS,iBCrJT,IAAAU,EAAA,WAOI,SAAJA,IAFA9G,KAAA+G,eAIID,EAAJpG,UAAAsG,QAAI,SAAQlE,EAAMmE,GACVjH,KAAK+G,KAAKjE,GAAQmE,GAGtBH,EAAJpG,UAAAwG,QAAI,SAAQpE,GACJ,OAAO9C,KAAK+G,KAAKjE,MAdzB,kBAEAoD,KAACiB,EAAAA,mDCGD,IAAAC,EAAA,WAuOE,SAAFA,EACYC,EACAC,EACDvH,EACCD,GAHAE,KAAZqH,aAAYA,EACArH,KAAZsH,KAAYA,EACDtH,KAAXD,GAAWA,EACCC,KAAZF,SAAYA,EAhEZE,KAAAuH,gBAAoB,EAIpBvH,KAAAwH,QAAW,IAAIpH,EAAAA,aAGfJ,KAAAG,SAAY,IAAIC,EAAAA,aAGhBJ,KAAAM,SAAY,IAAIF,EAAAA,aAGhBJ,KAAAyH,SAAY,IAAIrH,EAAAA,aAGhBJ,KAAA0H,MAAS,IAAItH,EAAAA,aAGbJ,KAAA2H,OAAU,IAAIvH,EAAAA,oBAiDZgH,EAAF1G,UAAAC,SAAE,WACEX,KAAKkF,OACLlF,KAAKD,GAAG0B,cAAcmG,UAAa5H,KAAKsF,aAAeC,EAAetD,UAIxEmF,EAAF1G,UAAAmH,UAAE,SAAUrH,GACNA,EAAMsH,kBACF9H,KAAK+H,cACPvH,EAAM6G,aAAaL,QAAQ,SAAShH,KAAK8C,MACzC9C,KAAKqH,aAAaL,QAAQ,SAAShH,QAIzCoH,EAAF1G,UAAAsH,KAAE,SAAKxH,KAGL4G,EAAF1G,UAAAuH,QAAE,SAAQzH,GACJA,EAAMsH,kBAEN9H,KAAKF,SAASmG,gBAAgBjG,KAAKD,GAAG0B,cAAe,aAAa,IAGtE2F,EAAF1G,UAAAwH,KAAE,SAAK1H,GACHA,EAAM2H,iBACNnI,KAAKF,SAASmG,gBAAgBjG,KAAKD,GAAG0B,cAAe,aAAa,GAClEzB,KAAK2H,OAAO/E,MACVkB,OAAQ9D,KAAKqH,aAAaH,QAAQ,UAClCnD,YAAa/D,QAKjBoH,EAAF1G,UAAA0H,UAAE,SAAU5H,GACNA,EAAM2H,iBACFnI,KAAKqI,UAAU7H,GACfR,KAAKF,SAASmG,gBAAgBjG,KAAKD,GAAG0B,cAAe,aAAa,GAElEzB,KAAKF,SAASmG,gBAAgBjG,KAAKD,GAAG0B,cAAe,aAAa,IAK1E2F,EAAF1G,UAAA4H,UAAE,SAAU9H,GACNA,EAAM2H,iBAENnI,KAAKF,SAASmG,gBAAgBjG,KAAKD,GAAG0B,cAAe,aAAa,IAItE2F,EAAF1G,UAAA6H,SAAE,SAAS/H,GACDR,KAAKqI,UAAU7H,IACfA,EAAM2H,iBACNnI,KAAKF,SAASmG,gBAAgBjG,KAAKD,GAAG0B,cAAe,aAAa,IAElEzB,KAAKF,SAASmG,gBAAgBjG,KAAKD,GAAG0B,cAAe,aAAa,IAI1E2F,EAAF1G,UAAA2H,UAAE,SAAU7H,GACN,IAAMsD,EAAS9D,KAAKqH,aAAaH,QAAQ,UAEzC,OAAQpD,GAAUA,EAAOhB,MAAQ9C,KAAK8C,MAAS9C,KAAK8C,MAA2B,EAAnB9C,KAAK8C,KAAKH,QAG1EyE,EAAF1G,UAAAqH,UAAE,WACE,OAAQ/H,KAAKsF,aAAeC,EAAetD,UAAajC,KAAK8C,MAA2B,EAAnB9C,KAAK8C,KAAKH,QAIjFyE,EAAF1G,UAAA8H,MAAE,SAAMhI,GAAN,IAAFI,EAAAZ,KACI,GAAIQ,EAAMiI,SAAWzI,KAAKD,GAAG0B,eACzBzB,KAAK0I,QAAUlI,EAAMiI,SAAWzI,KAAK0I,OAAOjH,cAEjC,MADPkH,EAAOnI,EAAMoI,OAEjB5I,KAAK6E,MAAMrE,GACM,IAATmI,GAAc3I,KAAK6I,SAC3BC,WAAW,WACTlI,EAAKiI,UAAW,EACZjI,EAAKoE,aAAarC,QAAU/B,EAAKoE,eAAiBpE,EAAKkC,KACzDlC,EAAKT,SAASyC,KAAKhC,GAEnBA,EAAK8G,MAAM9E,KAAKhC,IAEjB,IACc,KAAT+H,EACJ3I,KAAK+I,SACoB,GAAvB/I,KAAKuH,eACPvH,KAAKuH,iBAELvH,KAAKuH,eAAiBvH,KAAKgJ,WAAWrG,OAAS,GAGjC,KAATgG,GACL3I,KAAK+I,SACH/I,KAAKuH,eAAkBvH,KAAKgJ,WAAWrG,OAAS,EAClD3C,KAAKuH,iBAELvH,KAAKuH,gBAAkB,QAIxB,GAAIvH,KAAKqG,UAAY7F,EAAMiI,SAAWzI,KAAKqG,SAAS5E,cAAe,CAE3D,MADPkH,EAAOnI,EAAMoI,QAEb5I,KAAKiJ,gBACPjJ,KAAKM,SAASsC,KAAK5C,UAGlB,CACL,IAAM2I,EACO,MADPA,EAAOnI,EAAMoI,QAEjB5I,KAAKkJ,WAMX9B,EAAF1G,UAAAmE,MAAE,SAAMrE,GAAN,IAAFI,EAAAZ,KACQA,KAAKqG,UAAY7F,EAAMiI,SAAWzI,KAAKqG,SAAS5E,cAC9CzB,KAAKiJ,gBACPjJ,KAAKM,SAASsC,KAAK5C,MAEZA,KAAKmJ,eACdnJ,KAAK6I,UAAY7I,KAAK6I,SAClB7I,KAAK6I,SACPC,WAAW,WACLlI,EAAKmI,SACPnI,EAAK2G,gBAAkB,EACvB3G,EAAKwI,iBAAiBxI,EAAKkC,OAEzBlC,EAAK8H,SACP9H,EAAK8H,OAAOjH,cAAc4H,QACtBzI,EAAKmI,QACPnI,EAAKd,SAASmG,gBAAgBrF,EAAKmI,OAAOtH,cAAe,OAAO,KAGpE,IAC8B,GAAvBzB,KAAKuH,iBACdvH,KAAK8C,KAAO9C,KAAKgJ,WAAWhJ,KAAKuH,iBAE/BvH,KAAKgF,aAAarC,QAChB3C,KAAKgF,eAAiBhF,KAAK8C,MAC7B9C,KAAKG,SAASyC,KAAK5C,MAEhBA,KAAK6I,UACRC,WAAW,WAAKlI,EAAKb,GAAG0B,cAAc4H,SAAU,KAGlDrJ,KAAK0H,MAAM9E,KAAK5C,QAMtBoH,EAAF1G,UAAA2I,MAAE,SAAM7I,GACAR,KAAKiJ,gBACPjJ,KAAKwH,QAAQ5E,KAAK5C,OAItBoH,EAAF1G,UAAA0B,YAAE,WACE,IAAIC,EAAarC,KAAKsC,aAAeC,EAAWC,aAIhD,OAFAH,EAAYA,GAAcrC,KAAKsC,aAAeC,EAAWE,YAK3D2E,EAAF1G,UAAAyI,WAAE,WACE,OAASnJ,KAAKsC,aAAeC,EAAW+G,UAG1ClC,EAAF1G,UAAA6I,YAAE,WACE,OAASvJ,KAAKsF,aAAeC,EAAetD,UAG9CmF,EAAF1G,UAAAuI,aAAE,WACE,OAASjJ,KAAK+B,kBAAoBC,EAAgBC,UAEpDmF,EAAF1G,UAAA8I,OAAE,aAIApC,EAAF1G,UAAA+I,OAAE,SAAOjJ,GAAP,IAAFI,EAAAZ,KACI8I,WAAW,WACTlI,EAAKkC,KAAOlC,EAAK2G,eAAiB,EAAI/G,EAAMiI,OAAOxB,MAAQrG,EAAKoI,WAAWpI,EAAK2G,gBAChF3G,EAAKiI,UAAW,EACZjI,EAAKoE,aAAarC,QAAU/B,EAAKoE,eAAiBpE,EAAKkC,KACzDlC,EAAKT,SAASyC,KAAKhC,GAEnBA,EAAK8G,MAAM9E,KAAKhC,IAEjB,KAELwG,EAAF1G,UAAAgJ,KAAE,SAAKlJ,GACHR,KAAK8C,KAAOtC,EAAMiI,OAAOxB,MACzBjH,KAAKoJ,iBAAiBpJ,KAAK8C,OAG7BsE,EAAF1G,UAAA0I,iBAAE,SAAiBnC,GACXA,GAASjH,KAAK6G,wBAAwBvF,OACpC2F,IACFjH,KAAKgJ,WAAahJ,KAAK6G,aAAa8C,OAAO,SAACpF,GAAS,OAAuB,GAAvBA,EAAKrC,QAAQ+E,OAKxEG,EAAF1G,UAAAwE,KAAE,WACElF,KAAKgF,aAAehF,KAAK8C,MAE3BsE,EAAF1G,UAAAoE,MAAE,WACE9E,KAAK8C,KAAO9C,KAAKgF,cAGnBoC,EAAF1G,UAAAwI,OAAE,WACMlJ,KAAKoC,eACPpC,KAAKyH,SAAS7E,KAAK5C,OAIvBoH,EAAF1G,UAAAkJ,cAAE,WACE,IAAIzF,EAASnE,KAAK8C,KAIlB,OAHI9C,KAAK4G,SACPzC,EAASnE,KAAKsH,KAAKuC,UAAU7J,KAAK8C,KAAM9C,KAAK4G,SAExCzC,KAjdX,kBAsBA+B,KAACC,EAAAA,UAADC,OACEC,SAAU,MACVC,SAAU,g8BAkCVC,QAAS,mtFAtCXL,KAASY,IARTZ,KAAS4D,EAAAA,WANT5D,KAAEO,EAAAA,aACFP,KAAEM,EAAAA,8BAuKFgB,UAAAtB,KAAGQ,EAAAA,OAAHN,MAAU,aAGVjG,WAAA+F,KAAGQ,EAAAA,OAAHN,MAAU,cAGV9F,WAAA4F,KAAGQ,EAAAA,OAAHN,MAAU,cAGVqB,WAAAvB,KAAGQ,EAAAA,OAAHN,MAAU,cAGVsB,QAAAxB,KAAGQ,EAAAA,OAAHN,MAAU,WAGVuB,SAAAzB,KAAGQ,EAAAA,OAAHN,MAAU,YAGVQ,SAAAV,KAAGS,EAAAA,MAAHP,MAAS,YAGT2D,YAAA7D,KAAGS,EAAAA,MAAHP,MAAS,eAGT4D,YAAA9D,KAAGS,EAAAA,MAAHP,MAAS,eAGTtD,OAAAoD,KAAGS,EAAAA,MAAHP,MAAS,UAGT3F,cAAAyF,KAAGS,EAAAA,MAAHP,MAAS,iBAGTnC,SAAAiC,KAAGS,EAAAA,MAAHP,MAAS,YAGTS,eAAAX,KAAGS,EAAAA,MAAHP,MAAS,kBAGTrE,kBAAAmE,KAAGS,EAAAA,MAAHP,MAAS,qBAGT9D,aAAA4D,KAAGS,EAAAA,MAAHP,MAAS,gBAGTd,aAAAY,KAAGS,EAAAA,MAAHP,MAAS,gBAGTsC,SAAAxC,KAAG+D,EAAAA,UAAH7D,MAAa,YAGbC,WAAAH,KAAG+D,EAAAA,UAAH7D,MAAa,cAGb2C,SAAA7C,KAAG+D,EAAAA,UAAH7D,MAAa,YAgBbyB,YAAA3B,KAAGgE,EAAAA,aAAH9D,MAAgB,aAAc,aAQ9B4B,OAAA9B,KAAGgE,EAAAA,aAAH9D,MAAgB,QAAS,aAGzB6B,UAAA/B,KAAGgE,EAAAA,aAAH9D,MAAgB,WAAY,aAM5B8B,OAAAhC,KAAGgE,EAAAA,aAAH9D,MAAgB,QAAS,aAUzBgC,YAAAlC,KAAGgE,EAAAA,aAAH9D,MAAgB,aAAc,aAU9BkC,YAAApC,KAAGgE,EAAAA,aAAH9D,MAAgB,aAAc,aAO9BmC,WAAArC,KAAGgE,EAAAA,aAAH9D,MAAgB,YAAa,aAoB7BoC,QAAAtC,KAAGgE,EAAAA,aAAH9D,MAAgB,SAAU,aAgD1BvB,QAAAqB,KAAGgE,EAAAA,aAAH9D,MAAgB,SAAU,aAqC1BiD,QAAAnD,KAAGgE,EAAAA,aAAH9D,MAAgB,SAAU,cC9Y1B,IAAA+D,EAAA,4BAQAjE,KAACkE,EAAAA,SAADhE,OACEiE,SACEC,EAAAA,aACAC,EAAAA,gBAEFC,cACE3K,EACAuH,GAEFqD,SACE5K,GAEF6K,mBAEAC,WACE7D,GAEF8D,SAAUC,EAAAA"
}
