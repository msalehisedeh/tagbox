{
  "version": 3,
  "file": "tagbox.umd.min.js",
  "sources": [
    "ng://tagbox/out/src/app/tagbox/components/tagbox.component.ts",
    "ng://tagbox/out/src/app/tagbox/components/tag.component.ts",
    "ng://tagbox/out/src/app/tagbox/tagbox.module.ts"
  ],
  "sourcesContent": [
    "/*\r\n * Comparision Tool will layout two comparision trees side by side and feed them an internal object\r\n * heirarchy created for internal use from JSON objects given to this component.\r\n */\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  OnChanges,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  Renderer\r\n} from '@angular/core';\r\n\r\nimport {\r\n  DragDropPolicy,\r\n  Selectionpolicy,\r\n  EditPolicy\r\n} from '../interfaces/tagbox.interfaces';\r\n\r\nimport { TagComponent } from './tag.component';\r\n\r\n@Component({\r\n  selector: 'tagbox',\r\n  template: `\r\n<tag theme\r\n    *ngFor=\"let t of _tags; let i=index\"\r\n    tabindex=\"0\"\r\n    [class]=\"itemSelectionClass(i)\"\r\n    [name]=\"t\"\r\n    [removable]=\"isRemovable()\"\r\n    [maxlength]=\"maxtaglength\"\r\n    [format]=\"format\"\r\n    [autocomplete]=\"autocomplete\"\r\n    [attr.role]=\"'listitem'\"\r\n    [selectionpolicy]=\"selectionpolicy\"\r\n    [editpolicy]=\"editpolicy\" \r\n    [dragpolicy]=\"dragpolicy\"\r\n    (ondrop)=\"onTagDrop($event)\"\r\n    (onchange)=\"onTagChange($event)\"\r\n    (onadd)=\"onTagAdd($event)\"\r\n    (onremove)=\"onTagRemove($event)\"\r\n    (onselect)=\"onTagSelect($event)\"\r\n    (onfocus)=\"onTagFocus($event)\">\r\n</tag><tag theme\r\n    placeholder\r\n    tabindex=\"0\"\r\n    name=\"\"\r\n    [class]=\"itemSelectionClass(-1)\"\r\n    [maxlength]=\"maxtaglength\"\r\n    [placeholder]=\"placeholder\"\r\n    [format]=\"format\"\r\n    [autocomplete]=\"autocomplete\"\r\n    [attr.role]=\"'listitem'\"\r\n    [selectionpolicy]=\"selectionpolicy\"\r\n    [editpolicy]=\"editpolicy\" \r\n    [dragpolicy]=\"dragpolicy\"\r\n    (ondrop)=\"onTagDrop($event)\"\r\n    (onchange)=\"onTagChange($event)\"\r\n    (onadd)=\"onTagAdd($event)\"\r\n    (onremove)=\"onTagRemove($event)\"\r\n    (onfocus)=\"onTagFocus($event)\"></tag>\r\n`,\r\n  styles: [`:host{\n  background-color:#fff;\n  border:1px inset #888;\n  -webkit-box-sizing:border-box;\n  box-sizing:border-box;\n  display:inline-block;\n  min-height:50px;\n  padding:5px;\n  width:100%;\n  border-radius:5px;\n  margin-bottom:5px; }\n  :host.alert{\n    background-color:#ff9f9b;\n    border-color:#880500; }\n\n:host:focus{\n  border-color:#0ba; }\n\n:host:hover{\n  background-color:#ddd; }\n`],\r\n})\r\nexport class TagBoxComponent implements OnInit, OnChanges {\r\n\r\n  _tags: string[] = [];\r\n  _selectedindex: number[] = [];\r\n  \r\n  @Output(\"onchange\")\r\n  onchange= new EventEmitter()\r\n\r\n  @Output(\"onselect\")\r\n  onselect= new EventEmitter()\r\n\r\n  @Input(\"beforeAction\")\r\n  beforeAction = (event) => true;\r\n\r\n  @Input(\"id\")\r\n  id: string;\r\n\r\n  @Input(\"placeholder\")\r\n  placeholder: string = \"Add Tag\";\r\n  \r\n  @Input(\"maxboxlength\")\r\n  maxboxlength: number;\r\n\r\n  @Input(\"maxtaglength\")\r\n  maxtaglength: number;\r\n\r\n  @Input(\"maxtags\")\r\n  maxtags: number;\r\n\r\n  @Input(\"mintags\")\r\n  mintags: number;\r\n\r\n  @Input(\"tags\")\r\n  tags: any;\r\n\r\n  @Input(\"selectedindex\")\r\n  selectedindex: any;\r\n\r\n  @Input(\"delineateby\")\r\n  delineateby: string;\r\n\r\n  @Input(\"format\")\r\n  format: string;\r\n\r\n  @Input(\"autocomplete\")\r\n  autocomplete: string[];\r\n\r\n  @Input(\"selectionpolicy\")\r\n  selectionpolicy: Selectionpolicy;\r\n\r\n  @Input(\"editpolicy\")\r\n  editpolicy: EditPolicy;\r\n\r\n  @Input(\"dragpolicy\")\r\n  dragpolicy: DragDropPolicy;\r\n\r\n\r\n  constructor(private renderer: Renderer, private el: ElementRef) {\r\n\t  \r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.selectedindex && \r\n        (this.selectedindex instanceof String) && \r\n        (this.tags && !(this.tags instanceof String))) {\r\n      const x: string = String(this.selectedindex);\r\n      const list = x.split(\",\");\r\n      list.map((t) => {\r\n        this._selectedindex.push(parseInt(t));\r\n      });\r\n    } else {\r\n      this._selectedindex = this.selectedindex ? this.selectedindex : [];\r\n    }\r\n\r\n    if (this.tags && !(this.tags instanceof Array)) {\r\n      const x: string = String(this.tags);\r\n      this._tags = x.split(this.delineateby ? this.delineateby : \",\");\r\n    } else {\r\n      this._tags = this.tags;\r\n    }\r\n    this.renderer.setElementAttribute(this.el.nativeElement,\"role\",\"list\");\r\n  }\r\n\r\n  ngOnChanges(changes) {\r\n\r\n  }\r\n\r\n  itemSelectedAt(index) {\r\n    const canSelect = this.selectionpolicy !== Selectionpolicy.disabled;\r\n    return this._selectedindex.indexOf(index) < 0 ? false : canSelect;\r\n  }\r\n\r\n  itemSelectionClass(index) {\r\n    const selected = this.itemSelectedAt(index);\r\n    return selected ? \"selected\" : ((index < 0 || this.selectionpolicy === Selectionpolicy.disabled) ? \"left-padded\" : \"\");\r\n  }\r\n\r\n  isRemovable() {\r\n    let canRemove = (this.editpolicy === EditPolicy.addAndRemove);\r\n\r\n    canRemove = canRemove || (this.editpolicy === EditPolicy.removeOnly);\r\n\r\n    canRemove = canRemove && (!this.mintags || (this._tags.length > this.mintags));\r\n    \r\n    return  canRemove;\r\n  }\r\n\r\n  private isDuplicate(name) {\r\n    return this._tags.indexOf(name) < 0 ? false : true;\r\n  }\r\n\r\n  allowedToaddItem(tag) {\r\n    let canAdd = (this.editpolicy === EditPolicy.addAndRemove);\r\n\r\n    canAdd = canAdd || (this.editpolicy === EditPolicy.addOnly);\r\n\r\n    canAdd = canAdd && (!this.maxtags || (this._tags.length < this.maxtags-1));\r\n\r\n    canAdd = canAdd && !this.isDuplicate(tag.name);\r\n\r\n    if (canAdd && this.maxtaglength) {\r\n      const x = this._tags.join( this.delineateby ? this.delineateby : \",\");\r\n      if (x.length+tag.name.length+1 >= this.maxboxlength) {\r\n        canAdd = false;\r\n        this.renderer.setElementClass(this.el.nativeElement, \"alert\", true);\r\n      } else {\r\n        this.renderer.setElementClass(this.el.nativeElement, \"alert\", false);\r\n      }\r\n    }    \r\n    return  canAdd;\r\n  }\r\n\r\n  private notifyChange() {\r\n    this.tags = (this.tags instanceof Array) ? this._tags : this._tags.join( this.delineateby ? this.delineateby : \",\");\r\n    this.selectedindex = !(this.selectedindex instanceof Array) ? \r\n                          this._selectedindex : \r\n                          (this._selectedindex.length ? this._selectedindex.join(\",\") : \"\");\r\n    this.onchange.emit({\r\n      id: this.id,\r\n      tags: this.tags,\r\n      selecedIndex: this.selectedindex\r\n    });\r\n  }\r\n  private notifySelection() {\r\n    this.selectedindex = !(this.selectedindex instanceof Array) ? \r\n                        this._selectedindex : \r\n                        (this._selectedindex.length ? this._selectedindex.join(\",\") : \"\");\r\n    this.onselect.emit({\r\n      id: this.id,\r\n      selecedIndex: this.selectedindex\r\n    });\r\n  }\r\n  onTagRemove(event: TagComponent) {\r\n    if (this.isRemovable() && this.beforeAction({request:\"remove\", item: event.name})) {\r\n      const index = this._tags.indexOf(event.name);\r\n      const i = this._selectedindex.indexOf(index);\r\n\r\n      this._tags.splice(index,1);\r\n      if (i >= 0) {\r\n        this._selectedindex.splice(i,1);\r\n        this.notifyChange();\r\n      }\r\n    }\r\n  }\r\n\r\n  onTagAdd(event: TagComponent) {\r\n    let index = this._tags.indexOf(event.name);\r\n    const i = this._selectedindex.indexOf(index);\r\n    \r\n    if (index < 0  && \r\n        event.name.length && \r\n        this.allowedToaddItem(event) && \r\n        this.beforeAction({request:\"add\", item: event.name})) {\r\n      this._tags.push(event.name);\r\n      event.name = \"\";\r\n      this.notifyChange();\r\n      event.click(null);\r\n    } else {\r\n      event.reset();\r\n    }\r\n  }\r\n\r\n  onTagChange(event: TagComponent) {\r\n    if (!this.isDuplicate(event.name) && this.beforeAction({request:\"change\", item: event.originalName, to: event.name})) {\r\n      const index = this._tags.indexOf(event.originalName);\r\n      \r\n      this._tags[index] = event.name;\r\n      event.init();\r\n      this.notifyChange();\r\n    } else {\r\n      event.reset();\r\n    }\r\n  }\r\n\r\n  onTagDrop(event) {\r\n    const sind = this._tags.indexOf(event.source);\r\n    const dind = this._tags.indexOf(event.destination);\r\n\r\n    if (this.dragpolicy === DragDropPolicy.appendOnDrop) {\r\n      const i = this._selectedindex.indexOf(sind);\r\n      const name = event.destination + \" \" + event.source;\r\n      if (!this.maxtaglength ||  (this.maxtaglength && name.length <= this.maxtaglength)) {\r\n        if (this.beforeAction({request:\"drop\", action: \"append\", source: event.source, destination: event.destination})) {\r\n          this._tags[dind] = name;\r\n          this._tags.splice(sind,1);\r\n          this._selectedindex.splice(i,1);\r\n          this.notifyChange();\r\n        }\r\n      }\r\n    } else if (this.dragpolicy === DragDropPolicy.prependOnDrop) {\r\n      const i = this._selectedindex.indexOf(sind);\r\n      const name = event.source + \" \" + event.destination;\r\n      if (!this.maxtaglength ||  (this.maxtaglength && name.length <= this.maxtaglength)) {\r\n        if (this.beforeAction({request:\"drop\", action: \"prepend\", source: event.source, destination: event.destination})) {\r\n          this._tags[dind] = name;\r\n          this._tags.splice(sind,1);\r\n          this._selectedindex.splice(i,1);\r\n          this.notifyChange();\r\n        }\r\n      }\r\n    } if (this.dragpolicy === DragDropPolicy.swapOnDrop) {\r\n      if (this.beforeAction({request:\"drop\", action: \"swap\", source: event.source, destination: event.destination})) {\r\n        this._tags[sind] = this._tags.splice(dind, 1, this._tags[sind])[0];\r\n        this.notifyChange();\r\n      }\r\n    } \r\n  }\r\n  onTagSelect(event: TagComponent) {\r\n    if (this.selectionpolicy !== Selectionpolicy.disabled) {\r\n      this.onTagFocus(event);\r\n      if (this.beforeAction({request:\"select\", item: event.name})) {\r\n        if (this.selectionpolicy === Selectionpolicy.singleSelect) {\r\n          const list = this.el.nativeElement.childNodes;\r\n          for(let i=0; i < list.length; i++){\r\n            // 3 is text and 8 is comment\r\n            if (list[i].nodeType !== 3 && list[i].nodeType !== 8) {\r\n              this.renderer.setElementClass(list[i], \"selected\", false)\r\n            }\r\n          }\r\n          const index = this._tags.indexOf(event.name);\r\n          if (index >= 0) {\r\n            const i = this._selectedindex.indexOf(index);\r\n  \r\n            if (i < 0) {\r\n              this.renderer.setElementClass(event.el.nativeElement, \"selected\", true);\r\n              this._selectedindex = [index];\r\n            } else {\r\n              this.renderer.setElementClass(event.el.nativeElement, \"selected\", false)\r\n              this._selectedindex = [];\r\n            }\r\n            this.notifySelection();\r\n          }\r\n        } else {\r\n          const index = this._tags.indexOf(event.name);\r\n  \r\n          if (index >= 0) {\r\n            const i = this._selectedindex.indexOf(index);\r\n  \r\n            if (i < 0) {\r\n              this.renderer.setElementClass(event.el.nativeElement, \"selected\", true);\r\n              this._selectedindex.push(index);\r\n            } else {\r\n              this.renderer.setElementClass(event.el.nativeElement, \"selected\", false)\r\n              this._selectedindex.splice(i,1);\r\n            }\r\n            this.notifySelection();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  onTagFocus(event: TagComponent) {\r\n    if (this.selectionpolicy !== Selectionpolicy.disabled) {\r\n      const list = this.el.nativeElement.childNodes;\r\n      for(let i=0; i < list.length; i++){\r\n        // 3 is text and 8 is comment\r\n        if (list[i].nodeType !== 3 && list[i].nodeType !== 8) {\r\n          this.renderer.setElementClass(list[i], \"focused\", false)\r\n        }\r\n      }\r\n      const index = this._tags.indexOf(event.name);\r\n      if (index >= 0) {\r\n        this.renderer.setElementClass(event.el.nativeElement, \"focused\", true);\r\n      }\r\n    }\r\n  }\r\n}\r\n",
    "/*\r\n * A comparision tree will layout each attribute of a json deep through its heirarchy with given visual queues\r\n * that represents a deletion, adition, or change of attribute from the other tree. The status of each node is \r\n * evaluated by the parent comparision tool.\r\n */\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  HostListener,\r\n  ElementRef,\r\n  Renderer,\r\n  ViewChild,\r\n  EventEmitter\r\n} from '@angular/core';\r\n\r\nimport {\r\n  DragDropPolicy,\r\n  Selectionpolicy,\r\n  EditPolicy\r\n} from '../interfaces/tagbox.interfaces';\r\n\r\nimport { InToPipe } from 'into-pipes';\r\n\r\n@Component({\r\n  selector: 'tag',\r\n  template: `\r\n<span #selector\r\n    *ngIf=\"!editMode && removable && isSelectable()\" \r\n    tabindex=\"0\" \r\n    class=\"selection fa\"\r\n    (click)=\"select()\"></span>\r\n<input \r\n    *ngIf=\"editMode\" \r\n    class=\"editor\" \r\n    (blur)=\"tabout($event)\"\r\n    (keyup)=\"edit($event)\" \r\n    [value]=\"name\"\r\n    [attr.maxlength]=\"maxlength\"\r\n    [attr.placeholder]=\"placeholder\" #editor/>\r\n<div class=\"autocomplete off\" *ngIf=\"editMode && autocomplete\" #filler>\r\n  <ul>\r\n      <li *ngFor=\"let x of fillerList; let i = index\" \r\n        (click)=\"selectedFiller = i\" \r\n        [class.selected]=\"selectedFiller === i\"\r\n        [textContent]=\"x\"></li>\r\n  </ul>\r\n</div>\r\n<span \r\n    *ngIf=\"!editMode\" \r\n    class=\"holder\" \r\n    [innerHTML]=\"placeholder ? placeholder : formattedName()\"></span>\r\n<span \r\n    *ngIf=\"!editMode && removable\" \r\n    tabindex=\"0\" \r\n    class=\"remove fa fa-times\" \r\n    (click)=\"remove()\"></span>\r\n<span \r\n    *ngIf=\"!removable\" \r\n    class=\"placeholder fa fa-plus-circle\"></span>`,\r\n  styles: [`:host{\n  cursor:pointer;\n  color:#fdfdfd;\n  margin:4px 2px;\n  display:inline-block;\n  background-color:#1F84AB;\n  border:1px solid #015E85;\n  border-radius:8px 20px 20px 8px;\n  -webkit-box-sizing:border-box;\n          box-sizing:border-box;\n  padding:3px 0;\n  position:relative; }\n  :host ::ng-deep img{\n    width:50px; }\n  :host.left-padded{\n    padding-left:8px; }\n  :host.drag-over:hover{\n    background-color:#add8e6;\n    cursor:move; }\n  :host[placeholder]{\n    background-color:transparent;\n    color:#000;\n    border:0; }\n    :host[placeholder]:hover{\n      background-color:#eee !important; }\n    :host[placeholder] .editor{\n      color:#000; }\n  :host:hover{\n    background-color:#027912 !important;\n    border-color:#024b0b !important; }\n  :host.focused{\n    background-color:#027912 !important;\n    border-color:#024b0b !important; }\n  :host.selected:hover{\n    background-color:#D6534E; }\n  :host.selected{\n    background-color:#D6534E; }\n    :host.selected .selection.fa:before{\n      content:\"\\\\f00c\" !important; }\n  :host .selection{\n    background-color:transparent;\n    float:left;\n    margin-right:3px;\n    padding:0;\n    width:10px;\n    height:10px;\n    font-size:0.8rem;\n    padding:5px 3px; }\n    :host .selection.fa:before{\n      content:\"\\\\f013\"; }\n  :host .editor{\n    background-color:transparent;\n    overflow:unset;\n    max-width:inherit;\n    width:inherit;\n    color:#fff;\n    border:none; }\n  :host .placeholder{\n    color:#888585;\n    float:right;\n    font-size:1rem;\n    height:20px;\n    line-height:20px;\n    margin-left:5px;\n    text-align:center;\n    width:20px; }\n  :host .remove{\n    float:right;\n    font-size:0.7rem;\n    height:20px;\n    width:20px;\n    color:#fff;\n    text-align:center;\n    margin-left:5px;\n    line-height:20px;\n    font-weight:bolder; }\n  :host .holder{\n    pointer-events:none;\n    -webkit-user-select:none;\n    -moz-user-select:none;\n    -ms-user-select:none;\n    user-select:none; }\n  :host .autocomplete{\n    position:absolute;\n    top:26px;\n    z-index:5; }\n    :host .autocomplete.off{\n      display:none; }\n    :host .autocomplete ul{\n      border:1px solid #024b0b;\n      border-top:0;\n      list-style:none;\n      background-color:#027912;\n      list-style-position:inside;\n      margin:0;\n      max-height:150px;\n      overflow-y:auto;\n      padding:0; }\n      :host .autocomplete ul li{\n        color:#fdfdfd;\n        padding:5px;\n        white-space:nowrap; }\n        :host .autocomplete ul li.selected{\n          background-color:#D6534E; }\n        :host .autocomplete ul li:hover{\n          background-color:#0446a8;\n          color:#fff; }\n`],\r\n})\r\nexport class TagComponent implements OnInit {\r\n  editMode: boolean;\r\n\r\n  originalName: string;\r\n  selectedFiller = -1;\r\n  fillerList: string[];\r\n\r\n  @Output(\"onfocus\")\r\n  onfocus= new EventEmitter()\r\n\r\n  @Output(\"onchange\")\r\n  onchange= new EventEmitter()\r\n\r\n  @Output(\"onselect\")\r\n  onselect= new EventEmitter()\r\n\r\n  @Output(\"onremove\")\r\n  onremove= new EventEmitter()\r\n\r\n  @Output(\"onadd\")\r\n  onadd= new EventEmitter()\r\n\r\n  @Output(\"ondrop\")\r\n  ondrop= new EventEmitter()\r\n\r\n  @Input(\"format\")\r\n  format: string;\r\n\r\n  @Input(\"removable\")\r\n  removable: boolean;\r\n\r\n  @Input(\"maxlength\")\r\n  maxlength: string;\r\n\r\n  @Input(\"name\")\r\n  name: string;\r\n\r\n  @Input(\"placeholder\")\r\n  placeholder: boolean;\r\n\r\n  @Input(\"autocomplete\")\r\n  autocomplete: string[];\r\n\r\n  @Input(\"selectionpolicy\")\r\n  selectionpolicy: Selectionpolicy;\r\n\r\n  @Input(\"editpolicy\")\r\n  editpolicy: EditPolicy;\r\n\r\n  @Input(\"dragpolicy\")\r\n  dragpolicy: DragDropPolicy;\r\n\r\n  @ViewChild(\"editor\")\r\n  editor;\r\n\r\n  @ViewChild(\"selector\")\r\n  selector;\r\n\r\n  @ViewChild(\"filler\")\r\n  filler;\r\n\r\n  constructor(\r\n    private into: InToPipe,\r\n    public el: ElementRef, \r\n    private renderer: Renderer\r\n  ){\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.init();\r\n    this.el.nativeElement.draggable = (this.dragpolicy !== DragDropPolicy.disabled);\r\n  }\r\n\r\n  @HostListener('dragstart', ['$event']) \r\n  dragStart(event) {\r\n      event.stopPropagation();\t\r\n      if (this.allowDrag()) {\r\n          event.dataTransfer.setData(\"source\",this.name);\r\n      }\r\n  }\r\n  @HostListener('drag', ['$event']) \r\n  drag(event) {}\r\n  \r\n  @HostListener('dragend', ['$event']) \r\n  dragEnd(event) {\r\n      event.stopPropagation();\t\r\n\r\n      this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n  }\r\n  @HostListener('drop', ['$event'])\r\n  drop(event) {\r\n    event.preventDefault();\r\n    this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n    this.ondrop.emit({\r\n      source: event.dataTransfer.getData(\"source\"),\r\n      destination: this.name\r\n    })\r\n  }\r\n  \r\n  @HostListener('dragenter', ['$event']) \r\n  dragEnter(event) {\r\n      event.preventDefault();\r\n      if (this.allowDrop(event)) {\r\n          this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", true);\r\n      } else {\r\n          this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n      }\r\n  }\r\n  \r\n  @HostListener('dragleave', ['$event']) \r\n  dragLeave(event) {\r\n      event.preventDefault();\r\n              \r\n      this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n  }\r\n  \r\n  @HostListener('dragover', ['$event']) \r\n  dragOver(event) {\r\n      if (this.allowDrop(event)) {\r\n          event.preventDefault();\r\n          this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", true);\r\n      } else {\r\n          this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n      }\r\n  }\r\n  \r\n  allowDrop(event): boolean {\r\n      const source = event.dataTransfer.getData(\"source\");\r\n\r\n      return (source && source != this.name) && this.name && this.name.length > 0;\r\n  }\r\n\r\n  allowDrag() : boolean {\r\n    return (this.dragpolicy !== DragDropPolicy.disabled) && this.name && this.name.length > 0;\r\n  }\r\n\r\n  @HostListener('keyup', ['$event']) \r\n  keyup(event) {\r\n    if (event.target === this.el.nativeElement ||\r\n       (this.editor && event.target === this.editor.nativeElement)) {\r\n      const code = event.which;\r\n      if (code === 13) { // cariage return\r\n        this.click(event)\r\n      }else if (code === 9 && this.editMode) { // tab out\r\n        setTimeout(()=>{\r\n          this.editMode = false;\r\n          if (this.originalName.length && this.originalName !== this.name) {\r\n            this.onchange.emit(this);\r\n          } else {\r\n            this.onadd.emit(this);\r\n          }\r\n        }, 66);\r\n      }else if (code === 38) { // arrow up\r\n        if (this.filler) {\r\n          if (this.selectedFiller >= 0) {\r\n            this.selectedFiller--;\r\n          } else {\r\n            this.selectedFiller = this.fillerList.length - 1;\r\n          }         \r\n        }\r\n      } else if (code === 40) { // arrow down\r\n        if (this.filler) {\r\n          if (this.selectedFiller < (this.fillerList.length - 1)) {\r\n            this.selectedFiller++;\r\n          } else {\r\n            this.selectedFiller = -1;\r\n          }   \r\n        }\r\n      }\r\n    } else if (this.selector && event.target === this.selector.nativeElement) {\r\n      const code = event.which;\r\n      if (code === 13) { // cariage return\r\n        if (this.isSelectable()) {\r\n          this.onselect.emit(this)\r\n        }\r\n      }\r\n    } else {\r\n      const code = event.which;\r\n      if (code === 13) { // cariage return\r\n        this.remove();\r\n      }      \r\n    }\r\n  }\r\n\r\n  @HostListener('click', ['$event']) \r\n  click(event) {\r\n    if (this.selector && event.target === this.selector.nativeElement) {\r\n      if (this.isSelectable()) {\r\n        this.onselect.emit(this)\r\n      }\r\n    } else if (this.isEditable()) {\r\n      this.editMode = !this.editMode;\r\n      if (this.editMode) {\r\n        setTimeout(()=>{\r\n          if (this.filler) {\r\n            this.selectedFiller = -1;\r\n            this.updateFillerList(this.name);\r\n          }\r\n          if (this.editor) {\r\n            this.editor.nativeElement.focus();\r\n            if (this.filler) {\r\n              this.renderer.setElementClass(this.filler.nativeElement, \"off\", false);\r\n            }\r\n          }\r\n        },66);\r\n      } else if (this.selectedFiller >= 0) {\r\n        this.name = this.fillerList[this.selectedFiller];\r\n      }\r\n      if (this.originalName.length) {\r\n        if (this.originalName !== this.name) {\r\n          this.onchange.emit(this);\r\n        }\r\n        if (!this.editMode) {\r\n          setTimeout(()=>{this.el.nativeElement.focus() },66);\r\n        }\r\n      } else {\r\n        this.onadd.emit(this);\r\n      }\r\n    }\r\n  }\r\n\r\n  @HostListener('focus', ['$event']) \r\n  focus(event) {\r\n    if (this.isSelectable()) {\r\n      this.onfocus.emit(this)\r\n    }\r\n  }\r\n\r\n  isRemovable() {\r\n    let canRemove = (this.editpolicy === EditPolicy.addAndRemove);\r\n\r\n    canRemove = canRemove || (this.editpolicy === EditPolicy.removeOnly);\r\n    \r\n    return  canRemove;\r\n  }\r\n\r\n  isEditable() {\r\n    return  (this.editpolicy !== EditPolicy.viewOnly);\r\n  }\r\n\r\n  isDraggable() {\r\n    return  (this.dragpolicy !== DragDropPolicy.disabled);\r\n  }\r\n\r\n  isSelectable() {\r\n    return  (this.selectionpolicy !== Selectionpolicy.disabled);\r\n  }\r\n  select() {\r\n    \r\n  }\r\n\r\n  tabout(event) {\r\n    setTimeout(() => {\r\n      this.name = this.selectedFiller < 0 ? event.target.value : this.fillerList[this.selectedFiller];\r\n      this.editMode = false;\r\n      if (this.originalName.length && this.originalName !== this.name) {\r\n        this.onchange.emit(this);\r\n      } else {\r\n        this.onadd.emit(this);\r\n      }\r\n    }, 66)\r\n  }\r\n  edit(event) {\r\n    this.name = event.target.value;\r\n    this.updateFillerList(this.name);\r\n  }\r\n\r\n  updateFillerList(value) {\r\n    if (value && this.autocomplete instanceof Array){\r\n      if (value) {\r\n        this.fillerList = this.autocomplete.filter((item) => item.indexOf(value) >= 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  init() {\r\n    this.originalName = this.name;\r\n  }\r\n  reset() {\r\n    this.name = this.originalName;\r\n  }\r\n\r\n  remove() {\r\n    if (this.isRemovable()) {\r\n      this.onremove.emit(this);\r\n    }\r\n  }\r\n\r\n  formattedName() {\r\n    let result = this.name;\r\n    if (this.format) {\r\n      result = this.into.transform(this.name, this.format);\r\n    }\r\n    return result;\r\n  }\r\n\r\n}\r\n",
    "import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IntoPipeModule } from 'into-pipes';\r\n\r\nimport { TagComponent } from './components/tag.component';\r\nimport { TagBoxComponent } from './components/tagbox.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IntoPipeModule\r\n  ],\r\n  declarations: [\r\n    TagBoxComponent,\r\n    TagComponent\r\n  ],\r\n  exports: [\r\n    TagBoxComponent\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  providers: [\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class TagBoxModule {}\r\n"
  ],
  "names": [
    "TagBoxComponent",
    "renderer",
    "el",
    "this",
    "_tags",
    "_selectedindex",
    "onchange",
    "EventEmitter",
    "onselect",
    "beforeAction",
    "event",
    "placeholder",
    "prototype",
    "ngOnInit",
    "_this",
    "selectedindex",
    "String",
    "tags",
    "x",
    "split",
    "map",
    "t",
    "push",
    "parseInt",
    "Array",
    "delineateby",
    "setElementAttribute",
    "nativeElement",
    "ngOnChanges",
    "changes",
    "itemSelectedAt",
    "index",
    "canSelect",
    "selectionpolicy",
    "Selectionpolicy",
    "disabled",
    "indexOf",
    "itemSelectionClass",
    "isRemovable",
    "canRemove",
    "editpolicy",
    "EditPolicy",
    "addAndRemove",
    "removeOnly",
    "mintags",
    "length",
    "isDuplicate",
    "name",
    "allowedToaddItem",
    "tag",
    "canAdd",
    "addOnly",
    "maxtags",
    "maxtaglength",
    "join",
    "maxboxlength",
    "setElementClass",
    "notifyChange",
    "emit",
    "id",
    "selecedIndex",
    "notifySelection",
    "onTagRemove",
    "request",
    "item",
    "i",
    "splice",
    "onTagAdd",
    "click",
    "reset",
    "onTagChange",
    "originalName",
    "to",
    "init",
    "onTagDrop",
    "sind",
    "source",
    "dind",
    "destination",
    "dragpolicy",
    "DragDropPolicy",
    "appendOnDrop",
    "action",
    "prependOnDrop",
    "swapOnDrop",
    "onTagSelect",
    "onTagFocus",
    "singleSelect",
    "list",
    "childNodes",
    "nodeType",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "styles",
    "Renderer",
    "ElementRef",
    "Output",
    "Input",
    "format",
    "autocomplete",
    "TagComponent",
    "into",
    "selectedFiller",
    "onfocus",
    "onremove",
    "onadd",
    "ondrop",
    "draggable",
    "dragStart",
    "stopPropagation",
    "allowDrag",
    "dataTransfer",
    "setData",
    "drag",
    "dragEnd",
    "drop",
    "preventDefault",
    "getData",
    "dragEnter",
    "allowDrop",
    "dragLeave",
    "dragOver",
    "keyup",
    "target",
    "editor",
    "code",
    "which",
    "editMode",
    "setTimeout",
    "filler",
    "fillerList",
    "isSelectable",
    "remove",
    "isEditable",
    "updateFillerList",
    "focus",
    "viewOnly",
    "isDraggable",
    "select",
    "tabout",
    "value",
    "edit",
    "filter",
    "formattedName",
    "result",
    "transform",
    "InToPipe",
    "removable",
    "maxlength",
    "ViewChild",
    "HostListener",
    "TagBoxModule",
    "NgModule",
    "imports",
    "CommonModule",
    "IntoPipeModule",
    "declarations",
    "exports",
    "entryComponents",
    "providers",
    "schemas",
    "CUSTOM_ELEMENTS_SCHEMA"
  ],
  "mappings": "m0BAIA,IAAAA,EAAA,WA2IE,SAAFA,EAAsBC,EAA4BC,GAA5BC,KAAtBF,SAAsBA,EAA4BE,KAAlDD,GAAkDA,EAvDlDC,KAAAC,SACAD,KAAAE,kBAGAF,KAAAG,SAAY,IAAIC,EAAAA,aAGhBJ,KAAAK,SAAY,IAAID,EAAAA,aAGhBJ,KAAAM,aAAiB,SAACC,GAAU,OAAA,GAM5BP,KAAAQ,YAAwB,iBA2CtBX,EAAFY,UAAAC,SAAE,WAAA,IAAFC,EAAAX,KACQA,KAAKY,eACJZ,KAAKY,yBAAyBC,QAC9Bb,KAAKc,QAAUd,KAAKc,gBAAgBD,SACjCE,EAAYF,OAAOb,KAAKY,gBACfI,MAAM,KAChBC,IAAI,SAACC,GACRP,EAAKT,eAAeiB,KAAKC,SAASF,MAGpClB,KAAKE,eAAiBF,KAAKY,cAAgBZ,KAAKY,iBAGlD,IAAIZ,KAAKc,MAAUd,KAAKc,gBAAgBO,MAItCrB,KAAKC,MAAQD,KAAKc,SAJ4B,CAC9C,IAAMC,EAAYF,OAAOb,KAAKc,MAC9Bd,KAAKC,MAAQc,EAAEC,MAAMhB,KAAKsB,YAActB,KAAKsB,YAAc,KAI7DtB,KAAKF,SAASyB,oBAAoBvB,KAAKD,GAAGyB,cAAc,OAAO,SAGjE3B,EAAFY,UAAAgB,YAAE,SAAYC,KAIZ7B,EAAFY,UAAAkB,eAAE,SAAeC,GACb,IAAMC,EAAY7B,KAAK8B,kBAAoBC,EAAgBC,SAC3D,QAAOhC,KAAKE,eAAe+B,QAAQL,GAAS,IAAYC,GAG1DhC,EAAFY,UAAAyB,mBAAE,SAAmBN,GAEjB,OADiB5B,KAAK2B,eAAeC,GACnB,WAAeA,EAAQ,GAAK5B,KAAK8B,kBAAoBC,EAAgBC,SAAY,cAAgB,IAGrHnC,EAAFY,UAAA0B,YAAE,WACE,IAAIC,EAAapC,KAAKqC,aAAeC,EAAWC,aAMhD,OAFAH,GAFAA,EAAYA,GAAcpC,KAAKqC,aAAeC,EAAWE,eAE9BxC,KAAKyC,SAAYzC,KAAKC,MAAMyC,OAAS1C,KAAKyC,UAK/D5C,EAAVY,UAAAkC,YAAU,SAAYC,GAClB,QAAO5C,KAAKC,MAAMgC,QAAQW,GAAQ,IAGpC/C,EAAFY,UAAAoC,iBAAE,SAAiBC,GACf,IAAIC,EAAU/C,KAAKqC,aAAeC,EAAWC,cAM7CQ,GAFAA,GAFAA,EAASA,GAAW/C,KAAKqC,aAAeC,EAAWU,YAE9BhD,KAAKiD,SAAYjD,KAAKC,MAAMyC,OAAS1C,KAAKiD,QAAQ,MAEnDjD,KAAK2C,YAAYG,EAAIF,QAE3B5C,KAAKkD,eACPlD,KAAKC,MAAMkD,KAAMnD,KAAKsB,YAActB,KAAKsB,YAAc,KAC3DoB,OAAOI,EAAIF,KAAKF,OAAO,GAAK1C,KAAKoD,cACrCL,GAAS,EACT/C,KAAKF,SAASuD,gBAAgBrD,KAAKD,GAAGyB,cAAe,SAAS,IAE9DxB,KAAKF,SAASuD,gBAAgBrD,KAAKD,GAAGyB,cAAe,SAAS,IAGlE,OAAQuB,GAGFlD,EAAVY,UAAA6C,aAAU,WACNtD,KAAKc,KAAQd,KAAKc,gBAAgBO,MAASrB,KAAKC,MAAQD,KAAKC,MAAMkD,KAAMnD,KAAKsB,YAActB,KAAKsB,YAAc,KAC/GtB,KAAKY,cAAkBZ,KAAKY,yBAAyBS,MAE9BrB,KAAKE,eAAewC,OAAS1C,KAAKE,eAAeiD,KAAK,KAAO,GAD9DnD,KAAKE,eAE3BF,KAAKG,SAASoD,MACZC,GAAIxD,KAAKwD,GACT1C,KAAMd,KAAKc,KACX2C,aAAczD,KAAKY,iBAGff,EAAVY,UAAAiD,gBAAU,WACN1D,KAAKY,cAAkBZ,KAAKY,yBAAyBS,MAEhCrB,KAAKE,eAAewC,OAAS1C,KAAKE,eAAeiD,KAAK,KAAO,GAD9DnD,KAAKE,eAEzBF,KAAKK,SAASkD,MACZC,GAAIxD,KAAKwD,GACTC,aAAczD,KAAKY,iBAGvBf,EAAFY,UAAAkD,YAAE,SAAYpD,GACV,GAAIP,KAAKmC,eAAiBnC,KAAKM,cAAcsD,QAAQ,SAAUC,KAAMtD,EAAMqC,OAAQ,CACjF,IAAMhB,EAAQ5B,KAAKC,MAAMgC,QAAQ1B,EAAMqC,MACjCkB,EAAI9D,KAAKE,eAAe+B,QAAQL,GAEtC5B,KAAKC,MAAM8D,OAAOnC,EAAM,GACf,GAALkC,IACF9D,KAAKE,eAAe6D,OAAOD,EAAE,GAC7B9D,KAAKsD,kBAKXzD,EAAFY,UAAAuD,SAAE,SAASzD,GACP,IAAIqB,EAAQ5B,KAAKC,MAAMgC,QAAQ1B,EAAMqC,MAC3B5C,KAAKE,eAAe+B,QAAQL,GAElCA,EAAQ,GACRrB,EAAMqC,KAAKF,QACX1C,KAAK6C,iBAAiBtC,IACtBP,KAAKM,cAAcsD,QAAQ,MAAOC,KAAMtD,EAAMqC,QAChD5C,KAAKC,MAAMkB,KAAKZ,EAAMqC,MACtBrC,EAAMqC,KAAO,GACb5C,KAAKsD,eACL/C,EAAM0D,MAAM,OAEZ1D,EAAM2D,SAIVrE,EAAFY,UAAA0D,YAAE,SAAY5D,GACV,IAAKP,KAAK2C,YAAYpC,EAAMqC,OAAS5C,KAAKM,cAAcsD,QAAQ,SAAUC,KAAMtD,EAAM6D,aAAcC,GAAI9D,EAAMqC,OAAQ,CACpH,IAAMhB,EAAQ5B,KAAKC,MAAMgC,QAAQ1B,EAAM6D,cAEvCpE,KAAKC,MAAM2B,GAASrB,EAAMqC,KAC1BrC,EAAM+D,OACNtE,KAAKsD,oBAEL/C,EAAM2D,SAIVrE,EAAFY,UAAA8D,UAAE,SAAUhE,GACR,IAAMiE,EAAOxE,KAAKC,MAAMgC,QAAQ1B,EAAMkE,QAChCC,EAAO1E,KAAKC,MAAMgC,QAAQ1B,EAAMoE,aAEtC,GAAI3E,KAAK4E,aAAeC,EAAeC,aAAc,CACnD,IAAMhB,EAAI9D,KAAKE,eAAe+B,QAAQuC,GAChC5B,EAAOrC,EAAMoE,YAAc,IAAMpE,EAAMkE,SACxCzE,KAAKkD,cAAkBlD,KAAKkD,cAAgBN,EAAKF,QAAU1C,KAAKkD,eAC/DlD,KAAKM,cAAcsD,QAAQ,OAAQmB,OAAQ,SAAUN,OAAQlE,EAAMkE,OAAQE,YAAapE,EAAMoE,gBAChG3E,KAAKC,MAAMyE,GAAQ9B,EACnB5C,KAAKC,MAAM8D,OAAOS,EAAK,GACvBxE,KAAKE,eAAe6D,OAAOD,EAAE,GAC7B9D,KAAKsD,qBAGJ,GAAItD,KAAK4E,aAAeC,EAAeG,cAAe,CACrDlB,EAAI9D,KAAKE,eAAe+B,QAAQuC,GAChC5B,EAAOrC,EAAMkE,OAAS,IAAMlE,EAAMoE,cACnC3E,KAAKkD,cAAkBlD,KAAKkD,cAAgBN,EAAKF,QAAU1C,KAAKkD,eAC/DlD,KAAKM,cAAcsD,QAAQ,OAAQmB,OAAQ,UAAWN,OAAQlE,EAAMkE,OAAQE,YAAapE,EAAMoE,gBACjG3E,KAAKC,MAAMyE,GAAQ9B,EACnB5C,KAAKC,MAAM8D,OAAOS,EAAK,GACvBxE,KAAKE,eAAe6D,OAAOD,EAAE,GAC7B9D,KAAKsD,gBAGLtD,KAAK4E,aAAeC,EAAeI,YACnCjF,KAAKM,cAAcsD,QAAQ,OAAQmB,OAAQ,OAAQN,OAAQlE,EAAMkE,OAAQE,YAAapE,EAAMoE,gBAC9F3E,KAAKC,MAAMuE,GAAQxE,KAAKC,MAAM8D,OAAOW,EAAM,EAAG1E,KAAKC,MAAMuE,IAAO,GAChExE,KAAKsD,iBAIXzD,EAAFY,UAAAyE,YAAE,SAAY3E,GACV,GAAIP,KAAK8B,kBAAoBC,EAAgBC,WAC3ChC,KAAKmF,WAAW5E,GACZP,KAAKM,cAAcsD,QAAQ,SAAUC,KAAMtD,EAAMqC,QACnD,GAAI5C,KAAK8B,kBAAoBC,EAAgBqD,aAAc,CAEzD,IADA,IAAMC,EAAOrF,KAAKD,GAAGyB,cAAc8D,WAC3BxB,EAAE,EAAGA,EAAIuB,EAAK3C,OAAQoB,IAEH,IAArBuB,EAAKvB,GAAGyB,UAAuC,IAArBF,EAAKvB,GAAGyB,UACpCvF,KAAKF,SAASuD,gBAAgBgC,EAAKvB,GAAI,YAAY,GAIvD,GAAa,IADPlC,EAAQ5B,KAAKC,MAAMgC,QAAQ1B,EAAMqC,QAE/BkB,EAAI9D,KAAKE,eAAe+B,QAAQL,IAE9B,GACN5B,KAAKF,SAASuD,gBAAgB9C,EAAMR,GAAGyB,cAAe,YAAY,GAClExB,KAAKE,gBAAkB0B,KAEvB5B,KAAKF,SAASuD,gBAAgB9C,EAAMR,GAAGyB,cAAe,YAAY,GAClExB,KAAKE,mBAEPF,KAAK0D,sBAEF,CACL,IAAM9B,EAEN,GAAa,IAFPA,EAAQ5B,KAAKC,MAAMgC,QAAQ1B,EAAMqC,QAG/BkB,EAAI9D,KAAKE,eAAe+B,QAAQL,IAE9B,GACN5B,KAAKF,SAASuD,gBAAgB9C,EAAMR,GAAGyB,cAAe,YAAY,GAClExB,KAAKE,eAAeiB,KAAKS,KAEzB5B,KAAKF,SAASuD,gBAAgB9C,EAAMR,GAAGyB,cAAe,YAAY,GAClExB,KAAKE,eAAe6D,OAAOD,EAAE,IAE/B9D,KAAK0D,oBAMf7D,EAAFY,UAAA0E,WAAE,SAAW5E,GACT,GAAIP,KAAK8B,kBAAoBC,EAAgBC,SAAU,CAErD,IADA,IAAMqD,EAAOrF,KAAKD,GAAGyB,cAAc8D,WAC3BxB,EAAE,EAAGA,EAAIuB,EAAK3C,OAAQoB,IAEH,IAArBuB,EAAKvB,GAAGyB,UAAuC,IAArBF,EAAKvB,GAAGyB,UACpCvF,KAAKF,SAASuD,gBAAgBgC,EAAKvB,GAAI,WAAW,GAIzC,GADC9D,KAAKC,MAAMgC,QAAQ1B,EAAMqC,OAErC5C,KAAKF,SAASuD,gBAAgB9C,EAAMR,GAAGyB,cAAe,WAAW,OA5WzE,kBAmBAgE,KAACC,EAAAA,UAADC,OACEC,SAAU,SACVC,SAAU,goCAuCVC,QAAS,0bApDXL,KAAEM,EAAAA,WADFN,KAAEO,EAAAA,gCAgFF5F,WAAAqF,KAAGQ,EAAAA,OAAHN,MAAU,cAGVrF,WAAAmF,KAAGQ,EAAAA,OAAHN,MAAU,cAGVpF,eAAAkF,KAAGS,EAAAA,MAAHP,MAAS,kBAGTlC,KAAAgC,KAAGS,EAAAA,MAAHP,MAAS,QAGTlF,cAAAgF,KAAGS,EAAAA,MAAHP,MAAS,iBAGTtC,eAAAoC,KAAGS,EAAAA,MAAHP,MAAS,kBAGTxC,eAAAsC,KAAGS,EAAAA,MAAHP,MAAS,kBAGTzC,UAAAuC,KAAGS,EAAAA,MAAHP,MAAS,aAGTjD,UAAA+C,KAAGS,EAAAA,MAAHP,MAAS,aAGT5E,OAAA0E,KAAGS,EAAAA,MAAHP,MAAS,UAGT9E,gBAAA4E,KAAGS,EAAAA,MAAHP,MAAS,mBAGTpE,cAAAkE,KAAGS,EAAAA,MAAHP,MAAS,iBAGTQ,SAAAV,KAAGS,EAAAA,MAAHP,MAAS,YAGTS,eAAAX,KAAGS,EAAAA,MAAHP,MAAS,kBAGT5D,kBAAA0D,KAAGS,EAAAA,MAAHP,MAAS,qBAGTrD,aAAAmD,KAAGS,EAAAA,MAAHP,MAAS,gBAGTd,aAAAY,KAAGS,EAAAA,MAAHP,MAAS,iBCtIT,IAAAU,EAAA,WAkOE,SAAFA,EACYC,EACDtG,EACCD,GAFAE,KAAZqG,KAAYA,EACDrG,KAAXD,GAAWA,EACCC,KAAZF,SAAYA,EA5DZE,KAAAsG,gBAAoB,EAIpBtG,KAAAuG,QAAW,IAAInG,EAAAA,aAGfJ,KAAAG,SAAY,IAAIC,EAAAA,aAGhBJ,KAAAK,SAAY,IAAID,EAAAA,aAGhBJ,KAAAwG,SAAY,IAAIpG,EAAAA,aAGhBJ,KAAAyG,MAAS,IAAIrG,EAAAA,aAGbJ,KAAA0G,OAAU,IAAItG,EAAAA,oBA6CZgG,EAAF3F,UAAAC,SAAE,WACEV,KAAKsE,OACLtE,KAAKD,GAAGyB,cAAcmF,UAAa3G,KAAK4E,aAAeC,EAAe7C,UAIxEoE,EAAF3F,UAAAmG,UAAE,SAAUrG,GACNA,EAAMsG,kBACF7G,KAAK8G,aACLvG,EAAMwG,aAAaC,QAAQ,SAAShH,KAAK4C,OAIjDwD,EAAF3F,UAAAwG,KAAE,SAAK1G,KAGL6F,EAAF3F,UAAAyG,QAAE,SAAQ3G,GACJA,EAAMsG,kBAEN7G,KAAKF,SAASuD,gBAAgBrD,KAAKD,GAAGyB,cAAe,aAAa,IAGtE4E,EAAF3F,UAAA0G,KAAE,SAAK5G,GACHA,EAAM6G,iBACNpH,KAAKF,SAASuD,gBAAgBrD,KAAKD,GAAGyB,cAAe,aAAa,GAClExB,KAAK0G,OAAOnD,MACVkB,OAAQlE,EAAMwG,aAAaM,QAAQ,UACnC1C,YAAa3E,KAAK4C,QAKtBwD,EAAF3F,UAAA6G,UAAE,SAAU/G,GACNA,EAAM6G,iBACFpH,KAAKuH,UAAUhH,GACfP,KAAKF,SAASuD,gBAAgBrD,KAAKD,GAAGyB,cAAe,aAAa,GAElExB,KAAKF,SAASuD,gBAAgBrD,KAAKD,GAAGyB,cAAe,aAAa,IAK1E4E,EAAF3F,UAAA+G,UAAE,SAAUjH,GACNA,EAAM6G,iBAENpH,KAAKF,SAASuD,gBAAgBrD,KAAKD,GAAGyB,cAAe,aAAa,IAItE4E,EAAF3F,UAAAgH,SAAE,SAASlH,GACDP,KAAKuH,UAAUhH,IACfA,EAAM6G,iBACNpH,KAAKF,SAASuD,gBAAgBrD,KAAKD,GAAGyB,cAAe,aAAa,IAElExB,KAAKF,SAASuD,gBAAgBrD,KAAKD,GAAGyB,cAAe,aAAa,IAI1E4E,EAAF3F,UAAA8G,UAAE,SAAUhH,GACN,IAAMkE,EAASlE,EAAMwG,aAAaM,QAAQ,UAE1C,OAAQ5C,GAAUA,GAAUzE,KAAK4C,MAAS5C,KAAK4C,MAA2B,EAAnB5C,KAAK4C,KAAKF,QAGrE0D,EAAF3F,UAAAqG,UAAE,WACE,OAAQ9G,KAAK4E,aAAeC,EAAe7C,UAAahC,KAAK4C,MAA2B,EAAnB5C,KAAK4C,KAAKF,QAIjF0D,EAAF3F,UAAAiH,MAAE,SAAMnH,GAAN,IAAFI,EAAAX,KACI,GAAIO,EAAMoH,SAAW3H,KAAKD,GAAGyB,eACzBxB,KAAK4H,QAAUrH,EAAMoH,SAAW3H,KAAK4H,OAAOpG,cAEjC,MADPqG,EAAOtH,EAAMuH,OAEjB9H,KAAKiE,MAAM1D,GACM,IAATsH,GAAc7H,KAAK+H,SAC3BC,WAAW,WACTrH,EAAKoH,UAAW,EACZpH,EAAKyD,aAAa1B,QAAU/B,EAAKyD,eAAiBzD,EAAKiC,KACzDjC,EAAKR,SAASoD,KAAK5C,GAEnBA,EAAK8F,MAAMlD,KAAK5C,IAEjB,IACc,KAATkH,EACJ7H,KAAKiI,SACoB,GAAvBjI,KAAKsG,eACPtG,KAAKsG,iBAELtG,KAAKsG,eAAiBtG,KAAKkI,WAAWxF,OAAS,GAGjC,KAATmF,GACL7H,KAAKiI,SACHjI,KAAKsG,eAAkBtG,KAAKkI,WAAWxF,OAAS,EAClD1C,KAAKsG,iBAELtG,KAAKsG,gBAAkB,QAIxB,GAAItG,KAAK2F,UAAYpF,EAAMoH,SAAW3H,KAAK2F,SAASnE,cAAe,CAE3D,MADPqG,EAAOtH,EAAMuH,QAEb9H,KAAKmI,gBACPnI,KAAKK,SAASkD,KAAKvD,UAGlB,CACL,IAAM6H,EACO,MADPA,EAAOtH,EAAMuH,QAEjB9H,KAAKoI,WAMXhC,EAAF3F,UAAAwD,MAAE,SAAM1D,GAAN,IAAFI,EAAAX,KACQA,KAAK2F,UAAYpF,EAAMoH,SAAW3H,KAAK2F,SAASnE,cAC9CxB,KAAKmI,gBACPnI,KAAKK,SAASkD,KAAKvD,MAEZA,KAAKqI,eACdrI,KAAK+H,UAAY/H,KAAK+H,SAClB/H,KAAK+H,SACPC,WAAW,WACLrH,EAAKsH,SACPtH,EAAK2F,gBAAkB,EACvB3F,EAAK2H,iBAAiB3H,EAAKiC,OAEzBjC,EAAKiH,SACPjH,EAAKiH,OAAOpG,cAAc+G,QACtB5H,EAAKsH,QACPtH,EAAKb,SAASuD,gBAAgB1C,EAAKsH,OAAOzG,cAAe,OAAO,KAGpE,IAC8B,GAAvBxB,KAAKsG,iBACdtG,KAAK4C,KAAO5C,KAAKkI,WAAWlI,KAAKsG,iBAE/BtG,KAAKoE,aAAa1B,QAChB1C,KAAKoE,eAAiBpE,KAAK4C,MAC7B5C,KAAKG,SAASoD,KAAKvD,MAEhBA,KAAK+H,UACRC,WAAW,WAAKrH,EAAKZ,GAAGyB,cAAc+G,SAAU,KAGlDvI,KAAKyG,MAAMlD,KAAKvD,QAMtBoG,EAAF3F,UAAA8H,MAAE,SAAMhI,GACAP,KAAKmI,gBACPnI,KAAKuG,QAAQhD,KAAKvD,OAItBoG,EAAF3F,UAAA0B,YAAE,WACE,IAAIC,EAAapC,KAAKqC,aAAeC,EAAWC,aAIhD,OAFAH,EAAYA,GAAcpC,KAAKqC,aAAeC,EAAWE,YAK3D4D,EAAF3F,UAAA4H,WAAE,WACE,OAASrI,KAAKqC,aAAeC,EAAWkG,UAG1CpC,EAAF3F,UAAAgI,YAAE,WACE,OAASzI,KAAK4E,aAAeC,EAAe7C,UAG9CoE,EAAF3F,UAAA0H,aAAE,WACE,OAASnI,KAAK8B,kBAAoBC,EAAgBC,UAEpDoE,EAAF3F,UAAAiI,OAAE,aAIAtC,EAAF3F,UAAAkI,OAAE,SAAOpI,GAAP,IAAFI,EAAAX,KACIgI,WAAW,WACTrH,EAAKiC,KAAOjC,EAAK2F,eAAiB,EAAI/F,EAAMoH,OAAOiB,MAAQjI,EAAKuH,WAAWvH,EAAK2F,gBAChF3F,EAAKoH,UAAW,EACZpH,EAAKyD,aAAa1B,QAAU/B,EAAKyD,eAAiBzD,EAAKiC,KACzDjC,EAAKR,SAASoD,KAAK5C,GAEnBA,EAAK8F,MAAMlD,KAAK5C,IAEjB,KAELyF,EAAF3F,UAAAoI,KAAE,SAAKtI,GACHP,KAAK4C,KAAOrC,EAAMoH,OAAOiB,MACzB5I,KAAKsI,iBAAiBtI,KAAK4C,OAG7BwD,EAAF3F,UAAA6H,iBAAE,SAAiBM,GACXA,GAAS5I,KAAKmG,wBAAwB9E,OACpCuH,IACF5I,KAAKkI,WAAalI,KAAKmG,aAAa2C,OAAO,SAACjF,GAAS,OAAuB,GAAvBA,EAAK5B,QAAQ2G,OAKxExC,EAAF3F,UAAA6D,KAAE,WACEtE,KAAKoE,aAAepE,KAAK4C,MAE3BwD,EAAF3F,UAAAyD,MAAE,WACElE,KAAK4C,KAAO5C,KAAKoE,cAGnBgC,EAAF3F,UAAA2H,OAAE,WACMpI,KAAKmC,eACPnC,KAAKwG,SAASjD,KAAKvD,OAIvBoG,EAAF3F,UAAAsI,cAAE,WACE,IAAIC,EAAShJ,KAAK4C,KAIlB,OAHI5C,KAAKkG,SACP8C,EAAShJ,KAAKqG,KAAK4C,UAAUjJ,KAAK4C,KAAM5C,KAAKkG,SAExC8C,KA1cX,kBAoBAxD,KAACC,EAAAA,UAADC,OACEC,SAAU,MACVC,SAAU,g8BAkCVC,QAAS,6sFAtCXL,KAAS0D,EAAAA,WAZT1D,KAAEO,EAAAA,aACFP,KAAEM,EAAAA,8BAqKFS,UAAAf,KAAGQ,EAAAA,OAAHN,MAAU,aAGVvF,WAAAqF,KAAGQ,EAAAA,OAAHN,MAAU,cAGVrF,WAAAmF,KAAGQ,EAAAA,OAAHN,MAAU,cAGVc,WAAAhB,KAAGQ,EAAAA,OAAHN,MAAU,cAGVe,QAAAjB,KAAGQ,EAAAA,OAAHN,MAAU,WAGVgB,SAAAlB,KAAGQ,EAAAA,OAAHN,MAAU,YAGVQ,SAAAV,KAAGS,EAAAA,MAAHP,MAAS,YAGTyD,YAAA3D,KAAGS,EAAAA,MAAHP,MAAS,eAGT0D,YAAA5D,KAAGS,EAAAA,MAAHP,MAAS,eAGT9C,OAAA4C,KAAGS,EAAAA,MAAHP,MAAS,UAGTlF,cAAAgF,KAAGS,EAAAA,MAAHP,MAAS,iBAGTS,eAAAX,KAAGS,EAAAA,MAAHP,MAAS,kBAGT5D,kBAAA0D,KAAGS,EAAAA,MAAHP,MAAS,qBAGTrD,aAAAmD,KAAGS,EAAAA,MAAHP,MAAS,gBAGTd,aAAAY,KAAGS,EAAAA,MAAHP,MAAS,gBAGTkC,SAAApC,KAAG6D,EAAAA,UAAH3D,MAAa,YAGbC,WAAAH,KAAG6D,EAAAA,UAAH3D,MAAa,cAGbuC,SAAAzC,KAAG6D,EAAAA,UAAH3D,MAAa,YAebkB,YAAApB,KAAG8D,EAAAA,aAAH5D,MAAgB,aAAc,aAO9BuB,OAAAzB,KAAG8D,EAAAA,aAAH5D,MAAgB,QAAS,aAGzBwB,UAAA1B,KAAG8D,EAAAA,aAAH5D,MAAgB,WAAY,aAM5ByB,OAAA3B,KAAG8D,EAAAA,aAAH5D,MAAgB,QAAS,aAUzB4B,YAAA9B,KAAG8D,EAAAA,aAAH5D,MAAgB,aAAc,aAU9B8B,YAAAhC,KAAG8D,EAAAA,aAAH5D,MAAgB,aAAc,aAO9B+B,WAAAjC,KAAG8D,EAAAA,aAAH5D,MAAgB,YAAa,aAoB7BgC,QAAAlC,KAAG8D,EAAAA,aAAH5D,MAAgB,SAAU,aAgD1BzB,QAAAuB,KAAG8D,EAAAA,aAAH5D,MAAgB,SAAU,aAqC1B6C,QAAA/C,KAAG8D,EAAAA,aAAH5D,MAAgB,SAAU,cCvY1B,IAAA6D,EAAA,4BAOA/D,KAACgE,EAAAA,SAAD9D,OACE+D,SACEC,EAAAA,aACAC,EAAAA,gBAEFC,cACE/J,EACAuG,GAEFyD,SACEhK,GAEFiK,mBAEAC,aAEAC,SAAUC,EAAAA"
}
